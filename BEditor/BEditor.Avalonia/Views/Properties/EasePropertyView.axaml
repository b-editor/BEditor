<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:views="clr-namespace:BEditor.Views"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             xmlns:convert="clr-namespace:BEditor.ViewModels.Converters"
             Classes="EasingProperty"
             x:Class="BEditor.Views.Properties.EasePropertyView">
  <UserControl.Resources>
    <convert:PropertyHeaderTextConverter x:Key="PropertyHeaderTextConverter"/>
    <convert:EasingFuncToProperty x:Key="EasingFuncToProperty"/>
  </UserControl.Resources>
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="120*" MaxWidth="100" MinWidth="50"/>
      <ColumnDefinition Width="50"/>
      <ColumnDefinition Width="50"/>
      <ColumnDefinition Width="*" MinWidth="100"/>
      <ColumnDefinition Width="20"/>
    </Grid.ColumnDefinitions>

    <Grid Margin="0,0,0,1">
      <TextBlock Text="{Binding Metadata.Value.Name, Mode=OneTime}" VerticalAlignment="Top" HorizontalAlignment="Left" FontSize="13" Margin="10,7,0,0" TextTrimming="CharacterEllipsis"/>
    </Grid>

    <!--<md:PopupBox Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Top" Height="32" Width="32" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" StaysOpen="True">
      <md:PopupBox.ToggleContent>
        <md:PackIcon Kind="VectorLine" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource MaterialDesignBody}"/>
      </md:PopupBox.ToggleContent>
      <Grid Width="450" MinHeight="250">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="125"/>
          <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <ListView x:Name="Easelist" SelectedItem="{Binding Property.EasingData, Mode=OneWay}" ItemsSource="{x:Static easefunc:EasingFunc.LoadedEasingFunc}" DisplayMemberPath="Name" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="7,7,0,7" Grid.Column="0">
          <i:Interaction.Triggers>
            <i:EventTrigger EventName="SelectionChanged">
              <i:InvokeCommandAction Command="{Binding EasingChangeCommand, Mode=OneTime}" CommandParameter="{Binding SelectedItem, ElementName=Easelist}"/>
            </i:EventTrigger>
          </i:Interaction.Triggers>
        </ListView>
        <Label x:Name="easingsetting" Content="{Binding Property.EasingType, Converter={StaticResource EasingFuncToProperty}}" Grid.Column="1" VerticalContentAlignment="Stretch" HorizontalContentAlignment="Stretch" Padding="0,0,0,0"/>
      </Grid>
    </md:PopupBox>-->

    <!--<ItemsControl x:Name="itemscontol" Items="{Binding Property.Value, Mode=OneWay}" Grid.Column="3" AlternationCount="{Binding ElementName=itemscontol, Path=Items.Count}">
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <TextBox
              VerticalAlignment="Center"
              Margin="5, 3.75, 3.75, 0"
              Width="{Binding ElementName=itemscontol, Path=ActualWidth, Mode=OneWay}"
              Height="25"
              Text="{Binding Mode=OneWay}"
              PreviewMouseWheel="TextBox_MouseWheel"
              GotFocus="TextBox_GotFocus"
              LostFocus="TextBox_LostFocus"
              KeyDown="TextBox_KeyDown"
              views:AttachmentProperty.Int="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ItemsControl.AlternationIndex)}"/>
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>-->
    <ItemsControl x:Name="itemscontol" Items="{Binding Property.Value, Mode=OneWay}" Grid.Column="3" >
      <ItemsControl.ItemTemplate>
        <DataTemplate>
          <TextBox
            VerticalAlignment="Center"
            BorderThickness="0"
            Text="{Binding Mode=OneWay}"
            Margin="5,-24,3.75,0"
            />
        </DataTemplate>
      </ItemsControl.ItemTemplate>
    </ItemsControl>
    <!--<StackPanel Grid.Column="3">
      <TextBox
            BorderThickness="0"
            VerticalAlignment="Center"
            Text="aaa"
            Margin="0,-24,0,0"
            />
      <TextBox
            VerticalAlignment="Center"
            BorderThickness="0"
            Text="aaa"
            Margin="5,-24,3.75,0"
            />
    </StackPanel>-->

    <ToggleButton x:Name="togglebutton" Classes="Flat" BorderThickness="0" HorizontalAlignment="Center" VerticalAlignment="Top" Grid.Column="2" Height="32" Width="32" Click="ListToggleClick">
      <PathIcon Data="M12,18.17L8.83,15L7.42,16.41L12,21L16.59,16.41L15.17,15M12,5.83L15.17,9L16.58,7.59L12,3L7.41,7.59L8.83,9L12,5.83Z" VerticalAlignment="Center" HorizontalAlignment="Center" Width="20" Height="20"/>
    </ToggleButton>

    <Button Click="PopClick" Classes="Flat" Width="32.5" Grid.Column="4" Height="32.5">
      <PathIcon Width="14" Height="14" Data="M12,16A2,2 0 0,1 14,18A2,2 0 0,1 12,20A2,2 0 0,1 10,18A2,2 0 0,1 12,16M12,10A2,2 0 0,1 14,12A2,2 0 0,1 12,14A2,2 0 0,1 10,12A2,2 0 0,1 12,10M12,4A2,2 0 0,1 14,6A2,2 0 0,1 12,8A2,2 0 0,1 10,6A2,2 0 0,1 12,4Z"/>
    </Button>
    <Popup x:Name="Pop" StaysOpen="False">
      <VirtualizingStackPanel Background="{StaticResource ThemeBackgroundBrush}">
        <Button Classes="Flat" Foreground="{StaticResource ThemeForegroundBrush}" Content="Reset" Command="{Binding Reset, Mode=OneTime}"/>
      </VirtualizingStackPanel>
    </Popup>
  </Grid>
</UserControl>
