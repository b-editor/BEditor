<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BEditor.Core</name>
    </assembly>
    <members>
        <member name="T:BEditor.Core.Data.BasePropertyChanged">
            <summary>
            プロパティの変更を通知するクラス
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.Component">
            <summary>
            シングルトンで現在のプロジェクトやステータスなどを取得できるクラスを表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.Current">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.Path">
            <summary>
            Exeファイルが有るフォルダ
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.Arguments">
            <summary>
            コマンドライン引数を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.LoadedPlugins">
            <summary>
            読み込まれたプラグインを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.Project">
            <summary>
            開かれている <see cref="T:BEditor.Core.Data.ProjectData.Project"/> を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.Status">
            <summary>
            現在のステータスを取得または設定します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.Component.Funcs">
            <summary>
            プラットフォームに依存する関数を共有するフィールド
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.Funcs.CreateGraphicsContext">
            <summary>
            レンダリングコンテキストを作成する関数を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.Component.Funcs.SaveFileDialog">
            <summary>
            ファイルを保存するダイアログを作成する関数を取得または設定します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.Status">
            <summary>
            アプリケーションのステータスを表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.Status.Idle">
            <summary>
            作業をしていない状態を表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.Status.Edit">
            <summary>
            編集中であることを表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.Status.Saved">
            <summary>
            保存直後であることを表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.Status.Playing">
            <summary>
            プレビュー再生中であることを表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.Status.Pause">
            <summary>
            一時停止している状態を表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.Status.Output">
            <summary>
            出力中であることを表します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.ComponentObject">
            <summary>
            継承するクラスに対応するUIのデータのキャッシュを表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ComponentObject.ComponentData">
            <summary>
            UIなどのキャッシュを入れる配列を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ComponentObject.ExtensionData">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.EffectData.EffectElement">
            <summary>
            Represents the base class of the effect.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.EffectData.EffectElement.Children">
            <inheritdoc/>
        </member>
        <member name="P:BEditor.Core.Data.EffectData.EffectElement.Name">
            <summary>
            Get the name of the <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.EffectData.EffectElement.IsEnabled">
            <summary>
            Get or set if the <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/> is enabled.
            </summary>
            <remarks><see langword="true"/> if the <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/> is enabled or <see langword="false"/> otherwise.</remarks>
        </member>
        <member name="P:BEditor.Core.Data.EffectData.EffectElement.IsExpanded">
            <summary>
            Get or set whether the expander is open.
            </summary>
            <remarks><see langword="true"/> if the expander is open, otherwise <see langword="false"/>.</remarks>
        </member>
        <member name="P:BEditor.Core.Data.EffectData.EffectElement.Properties">
            <summary>
            Get the <see cref="T:BEditor.Core.Data.PropertyData.PropertyElement"/> to display on the GUI.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.EffectData.EffectElement.Parent">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.Clone">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.PropertyLoaded">
            <summary>
            Called after the constructor or after deserialization.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.Render(BEditor.Core.Data.ProjectData.EffectRenderArgs)">
            <summary>
            It is called at rendering time
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.PreviewRender(BEditor.Core.Data.ProjectData.EffectRenderArgs)">
            <summary>
            It will be called before rendering.
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.EffectData.EffectElement.CheckCommand">
            <summary>
            Represents a command that changes the boolean for which an effect is enabled.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.CheckCommand.#ctor(BEditor.Core.Data.EffectData.EffectElement,System.Boolean)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.CheckCommand"/> Initialize a new instance of the class.
            </summary>
            <param name="effect">The target <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/>.</param>
            <param name="value">New value</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.CheckCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.CheckCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.CheckCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.EffectData.EffectElement.UpCommand">
            <summary>
            Represents a command that changes the order of the effects.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.UpCommand.#ctor(BEditor.Core.Data.EffectData.EffectElement)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.UpCommand"/> Initialize a new instance of the class.
            </summary>
            <param name="effect">The target <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.UpCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.UpCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.UpCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.EffectData.EffectElement.DownCommand">
            <summary>
            Represents a command that changes the order of the effects.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.DownCommand.#ctor(BEditor.Core.Data.EffectData.EffectElement)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.DownCommand"/> Initialize a new instance of the class.
            </summary>
            <param name="effect">The target <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.DownCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.DownCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.DownCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.EffectData.EffectElement.RemoveCommand">
            <summary>
            Represents a command that removes the effect from the parent element.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.RemoveCommand.#ctor(BEditor.Core.Data.EffectData.EffectElement)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.RemoveCommand"/> Initialize a new instance of the class.
            </summary>
            <param name="effect">The target <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.RemoveCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.RemoveCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.RemoveCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.EffectData.EffectElement.AddCommand">
            <summary>
            Represents a command to add an effect.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.AddCommand.#ctor(BEditor.Core.Data.EffectData.EffectElement)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.AddCommand"/>Initialize a new instance of the class.
            </summary>
            <param name="effect">The target <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/>.</param>
            <exception cref="T:System.ArgumentException">effect.ClipData is null.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.AddCommand.#ctor(BEditor.Core.Data.EffectData.EffectElement,BEditor.Core.Data.ObjectData.ClipData)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.AddCommand"/> Initialize a new instance of the class.
            </summary>
            <param name="effect">The target <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/>.</param>
            <param name="clip"></param>
            <exception cref="T:System.ArgumentException">effect.ClipData is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.AddCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.AddCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.EffectElement.AddCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.EffectData.ImageEffect">
            <summary>
            Represents an effect that can be added to an <see cref="T:BEditor.Core.Data.ObjectData.ImageObject"/>.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.ImageEffect.Render(BEditor.Core.Media.Image@,BEditor.Core.Data.ProjectData.EffectRenderArgs)">
            <summary>
            It is called at rendering time
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.EffectData.ImageEffect.Render(BEditor.Core.Data.ProjectData.EffectRenderArgs)">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.ObjectData.ClipData">
            <summary>
            Represents the data of a clip to be placed in the timeline.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.#ctor(System.UInt32,System.Collections.ObjectModel.ObservableCollection{BEditor.Core.Data.EffectData.EffectElement},System.Int32,System.Int32,System.Type,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> Initialize a new instance of the class.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Id">
            <summary>
            Get the ID for this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Name">
            <summary>
            Get the name of this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.ClipType">
            <summary>
            Get the type of this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Type">
            <summary>
            Get the type of this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Start">
            <summary>
            Get or set the start frame for this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.End">
            <summary>
            Get or set the end frame for this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Length">
            <summary>
            Get the length of this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Layer">
            <summary>
            Get or set the layer where this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> will be placed.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.LabelText">
            <summary>
            Gets or sets the character displayed in this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Parent">
            <inheritdoc/>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.Effect">
            <summary>
            Get the effects included in this <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ObjectData.ClipData.BEditor#Core#Data#IParent{BEditor#Core#Data#EffectData#EffectElement}#Children">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.Render(BEditor.Core.Data.ProjectData.ClipRenderArgs)">
            <summary>
            It is called at rendering time
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.PreviewRender(BEditor.Core.Data.ProjectData.ClipRenderArgs)">
            <summary>
            It will be called before rendering.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.Clone">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.ObjectData.ClipData.AddCommand">
            <summary>
            Represents a command that adds <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> to a <see cref="T:BEditor.Core.Data.ProjectData.Scene"/>.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.AddCommand.#ctor(BEditor.Core.Data.ProjectData.Scene,System.Int32,System.Int32,System.Type)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.AddCommand"/> Initialize a new instance of the class.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="scene"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="type"/> が <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="startFrame"/> is less than 0.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="layer"/> is less than 0</exception>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.AddCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.AddCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.AddCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.ObjectData.ClipData.RemoveCommand">
            <summary>
            Represents a command to remove <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> from a <see cref="T:BEditor.Core.Data.ProjectData.Scene"/>
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.RemoveCommand.#ctor(BEditor.Core.Data.ObjectData.ClipData)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.RemoveCommand"/> Initialize a new instance of the class.
            </summary>
            <param name="clip">The target <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> is <see langword="null"/>.</exception>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.RemoveCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.RemoveCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.RemoveCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.ObjectData.ClipData.MoveCommand">
            <summary>
            Represents a command to move <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> frames and layers.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.MoveCommand.#ctor(BEditor.Core.Data.ObjectData.ClipData,System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.MoveCommand"/> Initialize a new instance of the class.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="toFrame"/> or <paramref name="toLayer"/> is less than 0.</exception>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.MoveCommand.#ctor(BEditor.Core.Data.ObjectData.ClipData,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.MoveCommand"/> Initialize a new instance of the class.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="to"/>, <paramref name="from"/>, <paramref name="tolayer"/>, <paramref name="fromlayer"/> is less than 0.</exception>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.MoveCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.MoveCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.MoveCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.ObjectData.ClipData.LengthChangeCommand">
            <summary>
            Represents a command to change the length of <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/>.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.LengthChangeCommand.#ctor(BEditor.Core.Data.ObjectData.ClipData,System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.LengthChangeCommand"/> Initialize a new instance of the class.
            </summary>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> is <see langword="null"/>.</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start"/> or <paramref name="end"/> is less than 0.</exception>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.LengthChangeCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.LengthChangeCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ObjectData.ClipData.LengthChangeCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.ObjectData.ObjectElement">
            <summary>
            Represents the base class of the object.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.IParent`1.Children">
            <summary>
            子要素を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.IChild`1.Parent">
            <summary>
            親要素を取得します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.ProjectData.ClipRenderArgs">
            <summary>
            Represents the data to be passed to the <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> at rendering time.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.ClipRenderArgs.#ctor(System.Int32,System.Collections.Generic.List{BEditor.Core.Data.ObjectData.ClipData})">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.ClipRenderArgs"/> Initialize a new instance of the record.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.ClipRenderArgs.#ctor">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.ClipRenderArgs"/> Initialize a new instance of the record.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.ClipRenderArgs.Frame">
            <summary>
            Get the frame to render.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.ClipRenderArgs.Schedules">
            <summary>
            Get the <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> to render.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.ClipRenderArgs.Handled">
            <summary>
            Gets or sets a value that indicates the current state of the process.
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.ProjectData.EffectRenderArgs">
            <summary>
            Represents the data to be passed to the <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/> at rendering time.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.EffectRenderArgs.#ctor">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.EffectRenderArgs"/> Initialize a new instance of the record.
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.EffectRenderArgs.#ctor(System.Int32,System.Collections.Generic.List{BEditor.Core.Data.EffectData.EffectElement})">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.EffectRenderArgs"/> Initialize a new instance of the record.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.EffectRenderArgs.Frame">
            <summary>
            Get the frame to render.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.EffectRenderArgs.Schedules">
            <summary>
            Get the <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/> to render.
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.EffectRenderArgs.Handled">
            <summary>
            Gets or sets a value that indicates the current state of the process.
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.ProjectData.Project">
            <summary>
            プロジェクトクラス
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Project"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="width">rootsceneの横幅</param>
            <param name="height">rootsceneの高さ</param>
            <param name="framerate">フレームレート</param>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.Framerate">
            <summary>
            フレームレートを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.Samplingrate">
            <summary>
            サンプリングレートを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.Filename">
            <summary>
            ファイル名を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.SceneList">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Scene"/> のリストを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.PreviewSceneIndex">
            <summary>
            プレビュー中のシーンのインデックスを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.GetBackUpName">
            <summary>
            バックアップ先のファイル名を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.PreviewScene">
            <summary>
            プレビューしている <see cref="T:BEditor.Core.Data.ProjectData.Scene"/> を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.IsDisposed">
            <summary>
            オブジェクトが廃棄されているかを取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.Dispose">
            <inheritdoc/>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.ExtensionData">
            <inheritdoc/>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Project.BEditor#Core#Data#IParent{BEditor#Core#Data#ProjectData#Scene}#Children">
            <inheritdoc/>
        </member>
        <member name="E:BEditor.Core.Data.ProjectData.Project.ProjectClosed">
            <summary>
            プロジェクトを閉じたあとに発生します
            </summary>
        </member>
        <member name="E:BEditor.Core.Data.ProjectData.Project.ProjectOpend">
            <summary>
            プロジェクトが開かれたあとに発生します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.BackUp(BEditor.Core.Data.ProjectData.Project)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Project"/> のバックアップを保存します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.Save(BEditor.Core.Data.ProjectData.Project)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Project"/> を名前をつけて保存します
            </summary>
            <param name="project">保存するプロジェクト</param>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.Save(BEditor.Core.Data.ProjectData.Project,System.String)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Project"/> を名前をつけて保存します
            </summary>
            <param name="project">保存するプロジェクト</param>
            <param name="path">保存するパス</param>
            <returns>保存に成功した場合は <see langword="true"/>、そうでない場合は <see langword="false"/> となります。<paramref name="project"/> が <see langword="null"/> の場合も <see langword="false"/> を返します</returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.SaveAs(BEditor.Core.Data.ProjectData.Project)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Project"/> を上書き保存します
            </summary>
            <param name="project">保存するプロジェクト</param>
            <returns>保存に成功した場合は <see langword="true"/>、そうでない場合は <see langword="false"/> となります。<paramref name="project"/> が <see langword="null"/> の場合も <see langword="false"/> を返します</returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.Open(System.String)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Project"/> を開き、編集可能な状態にします
            </summary>
            <param name="path">プロジェクトのパス</param>
            <returns>成功した場合は <see cref="T:BEditor.Core.Data.ProjectData.Project"/> のインスタンス、そうでない場合は <see langword="null"/> を返します</returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.Close">
            <summary>
            現在開かれているプロジェクトを閉じます
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Project.Create(System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            プロジェクトを作成し、編集可能な状態にします
            </summary>
            <param name="width">rootsceneの横幅</param>
            <param name="height">rootsceneの高さ</param>
            <param name="framerate">フレームレート</param>
            <param name="path">保存するパス</param>
            <returns>作成された <see cref="T:BEditor.Core.Data.ProjectData.Project"/> を返します</returns>
        </member>
        <member name="T:BEditor.Core.Data.ProjectData.Scene">
            <summary>
            シーンクラス
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.Width">
            <summary>
            フレームバッファの横幅を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.Height">
            <summary>
            フレームバッファの高さを取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.SceneName">
            <summary>
            名前を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.SelectNames">
            <summary>
            選択されているクリップの <see cref="P:BEditor.Core.Data.ObjectData.ClipData.Name"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.SelectName">
            <summary>
            選択中のクリップの <see cref="P:BEditor.Core.Data.ObjectData.ClipData.Name"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.Datas">
            <summary>
            タイムライン上の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.HideLayer">
            <summary>
            隠されているレイヤーの番号を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.SelectItem">
            <summary>
            選択中の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.SelectItems">
            <summary>
            選択されている <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.RenderingContext">
            <summary>
            グラフィックコンテキストを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.PreviewFrame">
            <summary>
            プレビュー中のフレームを取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.TotalFrame">
            <summary>
            最大フレームを取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.TimeLineZoom">
            <summary>
            タイムラインの拡大率を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.TimeLineHorizonOffset">
            <summary>
            タイムラインの水平方向のスクロールのオフセットを取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.TimeLineVerticalOffset">
            <summary>
            タイムラインの垂直方向のスクロールのオフセットを取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.BEditor#Core#Data#IParent{BEditor#Core#Data#ObjectData#ClipData}#Children">
            <inheritdoc/>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.Scene.BEditor#Core#Data#IChild{BEditor#Core#Data#ProjectData#Project}#Parent">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.#ctor(System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.Scene"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="width">フレームバッファの横幅</param>
            <param name="height">フレームバッファの高さ</param>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.Render(System.Int32)">
            <summary>
            シーンをレンダリングします
            </summary>
            <param name="frame">タイムライン基準のレンダリングするフレーム</param>
            <returns>レンダリングされた <seealso cref="T:BEditor.Core.Media.Image"/></returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.Rendering">
            <summary>
            <seealso cref="P:BEditor.Core.Data.ProjectData.Scene.PreviewFrame"/> のフレームをレンダリングします
            </summary>
            <returns>レンダリングされた <seealso cref="T:BEditor.Core.Media.Image"/></returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.GetLayer(System.Int32)">
            <summary>
            フレーム上にあるクリップを取得しソートします
            </summary>
            <param name="frame">タイムライン基準のフレーム</param>
            <returns>クリップのリスト</returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.Add(BEditor.Core.Data.ObjectData.ClipData)">
            <summary>
            クリップを追加し、<seealso cref="P:BEditor.Core.Data.ObjectData.ClipData.Parent"/> にこのシーンを設定します
            </summary>
            <param name="data">追加するクリップ</param>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.Remove(BEditor.Core.Data.ObjectData.ClipData)">
            <summary>
            シーンからクリップを削除します
            </summary>
            <param name="data">削除するクリップ</param>
            <returns>アイテムが正常に削除された場合は <see langword="true"/>、そうでない場合は <see langword="false"/> となります。このメソッドは、元の <see cref="T:System.Collections.ObjectModel.Collection`1"/> でアイテムが見つからなかった場合も <see langword="false"/> を返します</returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.Get(System.String)">
            <summary>
            クリップの <seealso cref="P:BEditor.Core.Data.ObjectData.ClipData.Name"/> から <seealso cref="T:BEditor.Core.Data.ObjectData.ClipData"/> を取得します
            </summary>
            <param name="name">取得するクリップの名前</param>
            <returns>存在する場合 <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> のインスタンス、そうでない場合は <see langword="null"/> となります。 <paramref name="name"/> が <see langword="null"/> の場合も <see langword="null"/> を返します</returns>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.Scene.SetCurrentClip(BEditor.Core.Data.ObjectData.ClipData)">
            <summary>
            選択中の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> を設定し、<see cref="P:BEditor.Core.Data.ProjectData.Scene.SelectNames"/> に名前が存在しない場合追加します
            </summary>
            <param name="data">対象の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="data"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.ProjectData.RootScene.SceneName">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.ProjectData.RootScene.#ctor(System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.ProjectData.RootScene"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="width">フレームバッファの横幅</param>
            <param name="height">フレームバッファの高さ</param>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.CheckProperty">
            <summary>
            チェックボックスのプロパティを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.#ctor(BEditor.Core.Data.PropertyData.CheckPropertyMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.CheckProperty"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.CheckPropertyMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.CheckProperty.IsChecked">
            <summary>
            チェックされている場合 <see langword="true"/>、そうでない場合は <see langword="false"/> となります
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.Subscribe(System.IObserver{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.OnCompleted">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.OnError(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.OnNext(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.CheckProperty.ChangeCheckedCommand">
            <summary>
            チェックされているかを変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.ChangeCheckedCommand.#ctor(BEditor.Core.Data.PropertyData.CheckProperty,System.Boolean)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.CheckProperty.ChangeCheckedCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.CheckProperty"/></param>
            <param name="value">新しい値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.ChangeCheckedCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.ChangeCheckedCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckProperty.ChangeCheckedCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.CheckPropertyMetadata">
            <summary>
            <see cref="!:CheckProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.CheckPropertyMetadata.#ctor(System.String,System.Boolean)">
            <summary>
            <see cref="!:CheckProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorAnimationProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.#ctor(BEditor.Core.Data.PropertyData.ColorAnimationPropertyMetadata)">
            <summary>
            
            </summary>
            <param name="metadata"></param>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorAnimationProperty.Parent">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorAnimationProperty.Value">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorAnimationProperty.Frame">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorAnimationProperty.EasingType">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorAnimationProperty.EasingData">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.GetValue(System.Int32)">
            <summary>
            イージングします
            </summary>
            <param name="frame">タイムライン基準のフレーム</param>
            <returns></returns>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeColorCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeColorCommand.#ctor(BEditor.Core.Data.PropertyData.ColorAnimationProperty,System.Int32,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            
            </summary>
            <param name="color"></param>
            <param name="index"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeColorCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeColorCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeColorCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeEaseCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeEaseCommand.#ctor(BEditor.Core.Data.PropertyData.ColorAnimationProperty,System.String)">
            <summary>
            
            </summary>
            <param name="easingList"></param>
            <param name="type"></param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeEaseCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeEaseCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.ChangeEaseCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorAnimationProperty.AddCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.AddCommand.#ctor(BEditor.Core.Data.PropertyData.ColorAnimationProperty,System.Int32)">
            <summary>
            
            </summary>
            <param name="colorProperty"></param>
            <param name="frame"></param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.AddCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.AddCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.AddCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorAnimationProperty.RemoveCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.RemoveCommand.#ctor(BEditor.Core.Data.PropertyData.ColorAnimationProperty,System.Int32)">
            <summary>
            
            </summary>
            <param name="colorProperty"></param>
            <param name="frame"></param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.RemoveCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.RemoveCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.RemoveCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorAnimationProperty.MoveCommand">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.MoveCommand.#ctor(BEditor.Core.Data.PropertyData.ColorAnimationProperty,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="colorProperty"></param>
            <param name="fromIndex"></param>
            <param name="to"></param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.MoveCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.MoveCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationProperty.MoveCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorAnimationPropertyMetadata">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationPropertyMetadata.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="name"></param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationPropertyMetadata.#ctor(System.String,System.Byte,System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="a"></param>
            <param name="usealpha"></param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorAnimationPropertyMetadata.#ctor(System.String,System.Byte,System.Byte,System.Byte,BEditor.Core.Data.PropertyData.EasingSetting.EasingData,System.Byte,System.Boolean)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="r"></param>
            <param name="g"></param>
            <param name="b"></param>
            <param name="easingType"></param>
            <param name="a"></param>
            <param name="usealpha"></param>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorAnimationPropertyMetadata.DefaultEase">
            <summary>
            
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorProperty">
            <summary>
            色を選択するプロパティを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorProperty.#ctor(BEditor.Core.Data.PropertyData.ColorPropertyMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.ColorProperty"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.ColorPropertyMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorProperty.Red">
            <summary>
            Red
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorProperty.Green">
            <summary>
            Green
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorProperty.Blue">
            <summary>
            Blue
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorProperty.Alpha">
            <summary>
            Alpha
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorProperty.ChangeColorCommand">
            <summary>
            色を変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorProperty.ChangeColorCommand.#ctor(BEditor.Core.Data.PropertyData.ColorProperty,System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.ColorProperty.ChangeColorCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.ColorProperty"/></param>
            <param name="r">新しい <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Red"/> の値</param>
            <param name="g">新しい <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Green"/> の値</param>
            <param name="b">新しい <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Blue"/> の値</param>
            <param name="a">新しい <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Alpha"/> の値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorProperty.ChangeColorCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorProperty.ChangeColorCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorProperty.ChangeColorCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ColorPropertyMetadata">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.ColorProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ColorPropertyMetadata.#ctor(System.String,System.Byte,System.Byte,System.Byte,System.Byte,System.Boolean)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.ColorPropertyMetadata"/> クラスの新しいインスタンスを初期化します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorPropertyMetadata.Red">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Red"/> のデフォルト値を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorPropertyMetadata.Green">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Green"/> のデフォルト値を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorPropertyMetadata.Blue">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Blue"/> のデフォルト値を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorPropertyMetadata.Alpha">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.ColorProperty.Alpha"/> のデフォルト値を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ColorPropertyMetadata.UseAlpha">
            <summary>
            Alphaチャンネルを表示する場合 <see langword="true"/>、そうでない場合は <see langword="false"/> となります
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.DocumentProperty">
            <summary>
            複数行の文字のプロパティを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.#ctor(BEditor.Core.Data.PropertyData.DocumentPropertyMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.DocumentProperty"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.DocumentPropertyMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.DocumentProperty.Text">
            <summary>
            入力されている文字列を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.DocumentProperty.HeightProperty">
            <summary>
            高さを取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.Subscribe(System.IObserver{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.DocumentProperty.TextChangeCommand">
            <summary>
            文字を変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.TextChangeCommand.#ctor(BEditor.Core.Data.PropertyData.DocumentProperty,System.String)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.DocumentProperty.TextChangeCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property"></param>
            <param name="text"></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.TextChangeCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.TextChangeCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentProperty.TextChangeCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.DocumentPropertyMetadata">
            <summary>
            <see cref="!:DocumentProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.DocumentPropertyMetadata.#ctor(System.String,System.Nullable{System.Int32})">
            <summary>
            <see cref="!:DocumentProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EaseProperty">
            <summary>
            <see cref="T:System.Single"/> 型の値をイージングするプロパティを表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EaseProperty.Value">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Time"/> に対応する <see langword="float"/> 型の値の <see cref="T:System.Collections.ObjectModel.ObservableCollection`1"/> を取得します
            </summary>
            <remarks>値の追加を行う場合は <see cref="M:BEditor.Core.Data.PropertyData.EaseProperty.InsertKeyframe(System.Int32,System.Single)"/> 、削除は <see cref="M:BEditor.Core.Data.PropertyData.EaseProperty.RemoveKeyframe(System.Int32,System.Single@)"/> を使用してください</remarks>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EaseProperty.Time">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> に対応するフレーム番号の <see cref="T:System.Collections.Generic.List`1"/> を取得します
            </summary>
            <remarks>値の追加を行う場合は <see cref="M:BEditor.Core.Data.PropertyData.EaseProperty.InsertKeyframe(System.Int32,System.Single)"/> 、削除は <see cref="M:BEditor.Core.Data.PropertyData.EaseProperty.RemoveKeyframe(System.Int32,System.Single@)"/> を使用してください</remarks>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EaseProperty.EasingType">
            <summary>
            現在のイージング関数を取得または設定します
            </summary>
        </member>
        <member name="E:BEditor.Core.Data.PropertyData.EaseProperty.AddKeyFrameEvent">
            <summary>
            UIにキーフレームの追加を要求する場合に発生します
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            <term>frame</term>
            <description>追加するフレーム番号</description>
            </item>
            <item>
            <term>index</term>
            <description><see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Time"/> のインデックス</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="E:BEditor.Core.Data.PropertyData.EaseProperty.DeleteKeyFrameEvent">
            <summary>
            UIにキーフレームの削除を要求する場合に発生します
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            <term>e</term>
            <description><see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> の削除するインデックス</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="E:BEditor.Core.Data.PropertyData.EaseProperty.MoveKeyFrameEvent">
            <summary>
            UIにキーフレームの移動を要求する場合に発生します
            </summary>
            <remarks>
            <list type="bullet">
            <item>
            <term>toindex</term>
            <description><see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Time"/> の移動元のインデックス</description>
            </item>
            <item>
            <term>toindex</term>
            <description><see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Time"/> の移動先のインデックス</description>
            </item>
            </list>
            </remarks>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EaseProperty.Optional">
            <summary>
            追加の値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EaseProperty.EasingData">
            <summary>
            現在のイージングのデータを取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.#ctor(BEditor.Core.Data.PropertyData.EasePropertyMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.EasePropertyMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EaseProperty.Parent">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.GetValue(System.Int32)">
            <summary>
            イージングをして、Optionalを追加します
            </summary>
            <param name="frame">タイムライン基準のフレーム</param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.InRange(System.Single)">
            <summary>
            <paramref name="value"/> が範囲外の場合その範囲に収まる値を、範囲内の場合 <paramref name="value"/> を返します
            </summary>
            <param name="value">対象の値</param>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.InsertKeyframe(System.Int32,System.Single)">
            <summary>
            特定のフレームにキーフレームを挿入します
            </summary>
            <param name="frame">追加するフレーム</param>
            <param name="value">追加する値</param>
            <returns>追加された <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> のインデックス</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="frame"/> が 親要素の範囲外です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.RemoveKeyframe(System.Int32,System.Single@)">
            <summary>
            特定のフレームのキーフレームを削除します
            </summary>
            <param name="frame">削除するフレーム</param>
            <param name="value">削除された値</param>
            <returns>削除された <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> のインデックス</returns>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="frame"/> が 親要素の範囲外です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EaseProperty.ChangeValueCommand">
            <summary>
            値を変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeValueCommand.#ctor(BEditor.Core.Data.PropertyData.EaseProperty,System.Int32,System.Single)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty.ChangeEaseCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/></param>
            <param name="index">変更する <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> のインデックス</param>
            <param name="newvalue"><see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> の新しい値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="index"/> が <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> の範囲外です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeValueCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeValueCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeValueCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EaseProperty.ChangeEaseCommand">
            <summary>
            イージング関数を変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeEaseCommand.#ctor(BEditor.Core.Data.PropertyData.EaseProperty,System.String)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty.ChangeEaseCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/></param>
            <param name="type">新しいイージング関数の名前</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.Collections.Generic.KeyNotFoundException"><paramref name="type"/> という名前のイージング関数が見つかりませんでした</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeEaseCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeEaseCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.ChangeEaseCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EaseProperty.AddCommand">
            <summary>
            キーフレームを追加するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.AddCommand.#ctor(BEditor.Core.Data.PropertyData.EaseProperty,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty.AddCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/></param>
            <param name="frame">追加するフレーム</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="frame"/> が 親要素の範囲外です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.AddCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.AddCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.AddCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EaseProperty.RemoveCommand">
            <summary>
            キーフレームを削除するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.RemoveCommand.#ctor(BEditor.Core.Data.PropertyData.EaseProperty,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty.RemoveCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/></param>
            <param name="frame">削除するフレーム</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="frame"/> が 親要素の範囲外です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.RemoveCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.RemoveCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.RemoveCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EaseProperty.MoveCommand">
            <summary>
            キーフレームを移動するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.MoveCommand.#ctor(BEditor.Core.Data.PropertyData.EaseProperty,System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty.MoveCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/></param>
            <param name="fromIndex">移動するキーフレームの <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> のインデックス</param>
            <param name="to">移動先のフレーム番号</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.IndexOutOfRangeException"><paramref name="fromIndex"/> が <see cref="P:BEditor.Core.Data.PropertyData.EaseProperty.Value"/> の範囲外です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="to"/> が 親要素の範囲外です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.MoveCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.MoveCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EaseProperty.MoveCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EasePropertyMetadata">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EasePropertyMetadata.#ctor(System.String,System.Single,System.Single,System.Single,System.Boolean)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EasePropertyMetadata"/> クラスの新しいインスタンスを初期化します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EasePropertyMetadata.#ctor(System.String,System.Single,BEditor.Core.Data.PropertyData.EasingSetting.EasingData,System.Single,System.Single,System.Boolean)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EasePropertyMetadata"/> クラスの新しいインスタンスを初期化します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasePropertyMetadata.DefaultValue">
            <summary>
            デフォルトの値を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasePropertyMetadata.DefaultEase">
            <summary>
            デフォルトのイージングデータを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasePropertyMetadata.Max">
            <summary>
            最大の値を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasePropertyMetadata.Min">
            <summary>
            最小の値を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasePropertyMetadata.UseOptional">
            <summary>
            追加の値を使用するかを取得します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EasingSetting.DefaultEasing">
            <summary>
            標準のイージング
            <para>32種類</para>
            <list type="table">
            <item>
            <description>None</description>
            </item>
            <item>
            <description>Linear</description>
            </item>
            <item>
            <description>SineIn</description>
            <description>SineOut</description>
            <description>SineInOut</description>
            </item>
            <item>
            <description>QuadIn</description>
            <description>QuadOut</description>
            <description>QuadInOut</description>
            </item>
            <item>
            <description>CubicIn</description>
            <description>CubicOut</description>
            <description>CubicInOut</description>
            </item>
            <item>
            <description>QuartIn</description>
            <description>QuartOut</description>
            <description>QuartInOut</description>
            </item>
            <item>
            <description>QuintIn</description>
            <description>QuintOut</description>
            <description>QuintInOut</description>
            </item>
            <item>
            <description>ExpIn</description>
            <description>ExpOut</description>
            <description>ExpInOut</description>
            </item>
            <item>
            <description>CircIn</description>
            <description>CircOut</description>
            <description>CircInOut</description>
            </item>
            <item>
            <description>BackIn</description>
            <description>BackOut</description>
            <description>BackInOut</description>
            </item>
            <item>
            <description>ElasticIn</description>
            <description>ElasticOut</description>
            <description>ElasticInOut</description>
            </item>
            <item>
            <description>BounceIn</description>
            <description>BounceOut</description>
            <description>BounceInOut</description>
            </item>
            </list>
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EaseProperty"/>, <see cref="T:BEditor.Core.Data.PropertyData.ColorAnimationProperty"/> などで利用可能なイージング関数を表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc.Properties">
            <summary>
            UIに表示するプロパティを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc.Children">
            <summary>
            キャッシュされた <see cref="P:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc.Properties"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc.Parent">
            <summary>
            親要素を取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc.EaseFunc(System.Int32,System.Int32,System.Single,System.Single)">
            <summary>
            イージング関数
            </summary>
            <param name="frame">取得するフレーム</param>
            <param name="totalframe">全体のフレーム</param>
            <param name="min">最小の値</param>
            <param name="max">最大の値</param>
            <returns>イージングされた値</returns>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc.PropertyLoaded">
            <summary>
            初期化時とデシリアライズ時に呼び出されます
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc.LoadedEasingFunc">
            <summary>
            読み込まれているイージング関数のType
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.EasingSetting.IEasingSetting">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.EasingSetting.EasingFunc"/> で利用可能なプロパティを表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasingSetting.IEasingSetting.Parent">
            <summary>
            親要素を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.EasingSetting.IEasingSetting.ComponentData">
            <summary>
            UIなどのキャッシュを入れる配列を取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.EasingSetting.IEasingSetting.PropertyLoaded">
            <summary>
            初期化時とデシリアライズ時に呼び出されます
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.ExpandGroup">
            <summary>
            複数の <see cref="T:BEditor.Core.Data.PropertyData.PropertyElement"/> をエクスパンダーでまとめるクラス
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.ExpandGroup.IsExpanded">
            <summary>
            エクスパンダーが開いているかを取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ExpandGroup.#ctor(BEditor.Core.Data.PropertyData.PropertyElementMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.ExpandGroup"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.PropertyElementMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ExpandGroup.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ExpandGroup.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ExpandGroup.Subscribe(System.IObserver{System.Boolean})">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ExpandGroup.OnCompleted">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ExpandGroup.OnError(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.ExpandGroup.OnNext(System.Boolean)">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.FileProperty">
            <summary>
            ファイルを選択するプロパティを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.#ctor(BEditor.Core.Data.PropertyData.FilePropertyMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.FileProperty"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.FilePropertyMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.FileProperty.File">
            <summary>
            ファイルの名前を取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.Subscribe(System.IObserver{System.String})">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.OnCompleted">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.OnError(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.OnNext(System.String)">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.FileProperty.ChangeFileCommand">
            <summary>
            ファイルの名前を変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.ChangeFileCommand.#ctor(BEditor.Core.Data.PropertyData.FileProperty,System.String)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.FileProperty.ChangeFileCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.FileProperty"/></param>
            <param name="path">新しい値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.ChangeFileCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.ChangeFileCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FileProperty.ChangeFileCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.FilePropertyMetadata">
            <summary>
            <see cref="!:FileProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FilePropertyMetadata.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            <see cref="!:FileProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.FontProperty">
            <summary>
            フォントを選択するプロパティ表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.#ctor(BEditor.Core.Data.PropertyData.FontPropertyMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.FontProperty"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.FontPropertyMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.FontProperty.Select">
            <summary>
            選択されているフォントを取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.Subscribe(System.IObserver{BEditor.Core.Media.FontRecord})">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.OnCompleted">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.OnError(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.OnNext(BEditor.Core.Media.FontRecord)">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.FontProperty.ChangeSelectCommand">
            <summary>
            フォントを変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.ChangeSelectCommand.#ctor(BEditor.Core.Data.PropertyData.FontProperty,BEditor.Core.Media.FontRecord)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.FontProperty.ChangeSelectCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.FontProperty"/></param>
            <param name="select">新しい値</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> または <paramref name="select"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.ChangeSelectCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.ChangeSelectCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontProperty.ChangeSelectCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="F:BEditor.Core.Data.PropertyData.FontProperty.FontList">
            <summary>
            読み込まれているフォントのリスト
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.PropertyData.FontProperty.FontStylesList">
            <summary>
            フォントのスタイルのリスト
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.FontPropertyMetadata">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.FontProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.FontPropertyMetadata.#ctor">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.FontPropertyMetadata"/> クラスの新しいインスタンスを初期化します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.FontPropertyMetadata.ItemSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.FontPropertyMetadata.SelectItem">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.FontPropertyMetadata.MemberPath">
            <summary>
            
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1">
            <summary>
            配列から一つのアイテムを選択するプロパティを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.#ctor(BEditor.Core.Data.PropertyData.Generic.SelectorPropertyMetadata{`0})">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.Generic.SelectorPropertyMetadata`1"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.SelectItem">
            <summary>
            選択されているアイテムを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.Index">
            <summary>
            選択されている <see cref="P:BEditor.Core.Data.PropertyData.Generic.SelectorPropertyMetadata`1.ItemSource"/> のインデックスを取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.Subscribe(System.IObserver{`0})">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.OnCompleted">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.OnError(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.OnNext(`0)">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.ChangeSelectCommand">
            <summary>
            選択されているアイテムを変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.ChangeSelectCommand.#ctor(BEditor.Core.Data.PropertyData.Generic.SelectorProperty{`0},System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.ChangeSelectCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.SelectorProperty"/></param>
            <param name="select">新しいインデックス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.ChangeSelectCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.ChangeSelectCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorProperty`1.ChangeSelectCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.Generic.SelectorPropertyMetadata`1">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.SelectorProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Generic.SelectorPropertyMetadata`1.#ctor(System.String,System.Collections.Generic.IList{`0},System.Int32,System.String)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata"/> の新しいインスタンスを初期化します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.Generic.SelectorPropertyMetadata`1.ItemSource">
            <summary>
            
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.Group">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.PropertyElement"/> をまとめるクラス
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.Group.Properties">
            <summary>
            グループにする <see cref="T:BEditor.Core.Data.PropertyData.PropertyElement"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.Group.Children">
            <summary>
            キャッシュされた <see cref="P:BEditor.Core.Data.PropertyData.Group.Properties"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.Group.Parent">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.Group.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.IKeyFrameProperty">
            <summary>
            タイムライン上に編集画面を持つプロパティを表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.IKeyFrameProperty.Scene">
            <summary>
            シーンを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.IKeyFrameProperty.ComponentData">
            <summary>
            UIなどのキャッシュを入れる配列を取得します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.PropertyElement">
            <summary>
            編集画面を持つプロパティを表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.PropertyElement.Parent">
            <summary>
            このプロパティの親要素を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.PropertyElement.ClipData">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.PropertyElement.Parent"/> から <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.PropertyElement.Scene">
            <summary>
            <see cref="P:BEditor.Core.Data.PropertyData.PropertyElement.ClipData"/> から <see cref="T:BEditor.Core.Data.ProjectData.Scene"/> を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.PropertyElement.PropertyMetadata">
            <summary>
            プロパティのメタデータを取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.PropertyElement.PropertyLoaded">
            <summary>
            初期化時とデシリアライズ時に呼び出されます
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.PropertyElement.ToString">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.PropertyElementMetadata">
            <summary>
            <see cref="!:PropertyElement"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.PropertyElementMetadata.#ctor(System.String)">
            <summary>
            <see cref="!:PropertyElement"/> のメタデータを表します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.PropertyMetadataAttribute">
            <summary>
            <see cref="M:BEditor.Core.Data.PropertyData.PropertyElement.PropertyLoaded"/> で自動で <see cref="T:BEditor.Core.Data.PropertyData.PropertyElementMetadata"/> を設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.PropertyMetadataAttribute.PropertyMetadata">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.PropertyElementMetadata"/> を取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.PropertyMetadataAttribute.#ctor(System.String,System.Type)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.PropertyMetadataAttribute"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="Fieldpath"><see cref="T:BEditor.Core.Data.PropertyData.PropertyElementMetadata"/> の静的フィールドの名前</param>
            <param name="Type"><paramref name="Fieldpath"/> があるクラスの <see cref="T:System.Type"/></param>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.SelectorProperty">
            <summary>
            配列から一つのアイテムを選択するプロパティを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.#ctor(BEditor.Core.Data.PropertyData.SelectorPropertyMetadata)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.SelectorProperty"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="metadata">このプロパティの <see cref="T:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata"/></param>
            <exception cref="T:System.ArgumentNullException"><paramref name="metadata"/> が <see langword="null"/> です</exception>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.SelectorProperty.SelectItem">
            <summary>
            選択されているアイテムを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.SelectorProperty.Index">
            <summary>
            選択されている <see cref="P:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata.ItemSource"/> のインデックスを取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.PropertyLoaded">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.Subscribe(System.IObserver{System.Int32})">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.OnCompleted">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.OnError(System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.OnNext(System.Int32)">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.SelectorProperty.ChangeSelectCommand">
            <summary>
            選択されているアイテムを変更するコマンド
            </summary>
            <remarks>このクラスは <see cref="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)"/> と併用することでコマンドを記録できます</remarks>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.ChangeSelectCommand.#ctor(BEditor.Core.Data.PropertyData.SelectorProperty,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.SelectorProperty.ChangeSelectCommand"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="property">対象の <see cref="T:BEditor.Core.Data.PropertyData.SelectorProperty"/></param>
            <param name="select">新しいインデックス</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="property"/> が <see langword="null"/> です</exception>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.ChangeSelectCommand.Do">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.ChangeSelectCommand.Redo">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorProperty.ChangeSelectCommand.Undo">
            <inheritdoc/>
        </member>
        <member name="T:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.SelectorProperty"/> のメタデータを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata.#ctor(System.String,System.Collections.IList,System.Int32,System.String)">
            <summary>
            <see cref="T:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata"/> の新しいインスタンスを初期化します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata.ItemSource">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata.DefaultIndex">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.PropertyData.SelectorPropertyMetadata.MemberPath">
            <summary>
            
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.RenderingResult">
            <summary>
            レンダリング結果を表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.RenderingResult.Image">
            <summary>
            
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.Serialize">
            <summary>
            <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> を利用してシリアル化やクローンなどの関数を提供するクラスを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.Serialize.LoadFromFile``1(System.String)">
            <summary>
            オブジェクトの内容をファイルから読み込み復元します
            </summary>
            <param name="path">読み込むファイル名</param>
            <returns>成功した場合は復元されたオブジェクト、そうでない場合は <see langword="null"/> を返します</returns>
        </member>
        <member name="M:BEditor.Core.Data.Serialize.LoadFromFile(System.String,System.Type)">
            <summary>
            オブジェクトの内容をファイルから読み込み復元します
            </summary>
            <param name="path">読み込むファイル名</param>
            <param name="type"></param>
            <returns>成功した場合は復元されたオブジェクト、そうでない場合は <see langword="null"/> を返します</returns>
        </member>
        <member name="M:BEditor.Core.Data.Serialize.SaveToFile(System.Object,System.String)">
            <summary>
            オブジェクトの内容をファイルに保存します
            </summary>
            <param name="obj">保存するオブジェクト</param>
            <param name="path">保存先のファイル名</param>
        </member>
        <member name="M:BEditor.Core.Data.Serialize.DeepClone``1(``0)">
            <summary>
            DataContractを使用してDeepCloneを行います
            </summary>
            <typeparam name="T"></typeparam>
            <param name="obj"></param>
            <returns></returns>
        </member>
        <member name="P:BEditor.Core.Data.Serialize.SerializeKnownTypes">
            <summary>
            <see cref="T:System.Runtime.Serialization.Json.DataContractJsonSerializer"/> で使用するKnownTypeを取得します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.IUndoRedoCommand">
            <summary>
            実行、元に戻す(undo)、やり直す(redo)の動作を表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.IUndoRedoCommand.Do">
            <summary>
            操作を実行します
            <para>例外を投げた場合キャンセルされます</para>
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.IUndoRedoCommand.Undo">
            <summary>
            操作を元に戻します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.IUndoRedoCommand.Redo">
            <summary>
            操作をやり直します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.UndoRedoManager">
            <summary>
            行なった操作の履歴を蓄積することでUndo,Redoの機能を表します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.UndoRedoManager.CommandTypeDictionary">
            <summary>
            コマンドに対応する名前が入った配列を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.UndoRedoManager.UndoStack">
            <summary>
            実行後またはRedo後に記録
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.UndoRedoManager.RedoStack">
            <summary>
            Undo後に記録
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.UndoRedoManager.Do(BEditor.Core.Data.IUndoRedoCommand)">
            <summary>
            操作を実行し、かつその内容をStackに追加します
            </summary>
            <param name="command">実行するコマンド</param>
        </member>
        <member name="M:BEditor.Core.Data.UndoRedoManager.Undo">
            <summary>
            行なったコマンドを取り消してひとつ前の状態に戻します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.UndoRedoManager.Redo">
            <summary>
            取り消したコマンドをやり直します
            </summary>
        </member>
        <member name="M:BEditor.Core.Data.UndoRedoManager.Clear">
            <summary>
            記録されたコマンドを初期化
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.UndoRedoManager.CanUndo">
            <summary>
            Undo出来るか取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Data.UndoRedoManager.CanRedo">
            <summary>
            Redo出来るかを取得します
            </summary>
        </member>
        <member name="E:BEditor.Core.Data.UndoRedoManager.CanUndoChange">
            <summary>
            Undo出来るかどうかの状態が変化すると発生します
            </summary>
        </member>
        <member name="E:BEditor.Core.Data.UndoRedoManager.CanRedoChange">
            <summary>
            Redo出来るかどうかの状態が変化すると発生します
            </summary>
        </member>
        <member name="E:BEditor.Core.Data.UndoRedoManager.DidEvent">
            <summary>
            UnDo ReDo Do時に発生します
            </summary>
        </member>
        <member name="E:BEditor.Core.Data.UndoRedoManager.CommandCancel">
            <summary>
            コマンドがキャンセルされたときに発生します
            </summary>
        </member>
        <member name="E:BEditor.Core.Data.UndoRedoManager.CommandsClear">
            <summary>
            <see cref="M:BEditor.Core.Data.UndoRedoManager.Clear"/> 後に発生します
            </summary>
        </member>
        <member name="T:BEditor.Core.Data.CommandType">
            <summary>
            コマンドの種類を表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.CommandType.Do">
            <summary>
            
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.CommandType.Undo">
            <summary>
            
            </summary>
        </member>
        <member name="F:BEditor.Core.Data.CommandType.Redo">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.DisposableObject.ThrowIfDisposed">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Check(BEditor.Core.Data.EffectData.EffectElement,System.Boolean,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.CheckCommand"/> を実行します
            </summary>
            <param name="effect">対象の <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/></param>
            <param name="value">セットする値</param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> が <see langword="null"/> です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Up(BEditor.Core.Data.EffectData.EffectElement,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.UpCommand"/> を実行します
            </summary>
            <param name="effect">対象の <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/></param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> が <see langword="null"/> です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Down(BEditor.Core.Data.EffectData.EffectElement,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.DownCommand"/> を実行します
            </summary>
            <param name="effect">対象の <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/></param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> が <see langword="null"/> です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Remove(BEditor.Core.Data.EffectData.EffectElement,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.RemoveCommand"/> を実行します
            </summary>
            <param name="effect">対象の <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/></param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> が <see langword="null"/> です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Add(BEditor.Core.Data.EffectData.EffectElement,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.AddCommand"/> を実行します
            </summary>
            <param name="effect">対象の <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/></param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> が <see langword="null"/> です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Add(BEditor.Core.Data.EffectData.EffectElement,BEditor.Core.Data.ObjectData.ClipData,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.EffectData.EffectElement.DownCommand"/> を実行します
            </summary>
            <param name="effect">対象の <see cref="T:BEditor.Core.Data.EffectData.EffectElement"/></param>
            <param name="clip"></param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="effect"/> が <see langword="null"/> です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Add(BEditor.Core.Data.ProjectData.Scene,System.Int32,System.Int32,System.Type,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.AddCommand"/> を実行します
            </summary>
            <param name="scene">対象の <see cref="T:BEditor.Core.Data.ProjectData.Scene"/></param>
            <param name="addframe">配置するフレーム</param>
            <param name="layer">配置するレイヤー</param>
            <param name="type">クリップの種類</param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="scene"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.ArgumentNullException"><paramref name="type"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="addframe"/> が0以下です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="layer"/> が0以下です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Remove(BEditor.Core.Data.ObjectData.ClipData,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.RemoveCommand"/> を実行します
            </summary>
            <param name="clip">対象の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/></param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> が <see langword="null"/> です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Move(BEditor.Core.Data.ObjectData.ClipData,System.Int32,System.Int32,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.MoveCommand"/> を実行します
            </summary>
            <param name="clip">対象の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/></param>
            <param name="to">新しい開始フレーム</param>
            <param name="tolayer">新しい配置レイヤー</param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="to"/> または <paramref name="tolayer"/> が0以下です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.Move(BEditor.Core.Data.ObjectData.ClipData,System.Int32,System.Int32,System.Int32,System.Int32,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.MoveCommand"/> を実行します
            </summary>
            <param name="clip">対象の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/></param>
            <param name="to">新しい開始フレーム</param>
            <param name="from">古い開始フレーム</param>
            <param name="tolayer">新しい配置レイヤー</param>
            <param name="fromlayer">古い配置レイヤー</param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="to"/>, <paramref name="from"/>, <paramref name="tolayer"/>, <paramref name="fromlayer"/> が0以下です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="M:BEditor.Core.Extensions.ExtensionCommand.LengthChange(BEditor.Core.Data.ObjectData.ClipData,System.Int32,System.Int32,BEditor.Core.Extensions.CommandMode)">
            <summary>
            <see cref="T:BEditor.Core.Data.ObjectData.ClipData.LengthChangeCommand"/> を実行します
            </summary>
            <param name="clip">対象の <see cref="T:BEditor.Core.Data.ObjectData.ClipData"/></param>
            <param name="start">開始フレーム</param>
            <param name="end">終了フレーム</param>
            <param name="mode"><see cref="F:BEditor.Core.Extensions.CommandMode.Execute"/> を指定するとコマンドが <see cref="T:BEditor.Core.Data.UndoRedoManager"/> に記録されません</param>
            <exception cref="T:System.ArgumentNullException"><paramref name="clip"/> が <see langword="null"/> です</exception>
            <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="start"/> または <paramref name="end"/> が0以下です</exception>
            <returns>作成されたコマンド</returns>
        </member>
        <member name="T:BEditor.Core.Media.Color">
            <summary>
            RGBA (red, green, blue, alpha) の色を表します
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.White">
            <summary>
            Red:255 
            Green:255 
            Blue:255 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Black">
            <summary>
            Red:0 
            Green:0 
            Blue:0 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Red">
            <summary>
            Red:244 
            Green:67
            Blue:54 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Pink">
            <summary>
            Red:233 
            Green:30 
            Blue:99 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Purple">
            <summary>
            Red:156 
            Green:39 
            Blue:176 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.DeepPurple">
            <summary>
            Red:103 
            Green:58 
            Blue:182 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Indigo">
            <summary>
            Red:63 
            Green:81 
            Blue:181 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Blue">
            <summary>
            Red:33 
            Green:150 
            Blue:243 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.LightBlue">
            <summary>
            Red:3 
            Green:169 
            Blue:244 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Cyan">
            <summary>
            Red:0 
            Green:188 
            Blue:212 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Teal">
            <summary>
            Red:0 
            Green:150 
            Blue:136 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Green">
            <summary>
            Red:76 
            Green:175 
            Blue:80 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.LightGreen">
            <summary>
            Red:139 
            Green:195 
            Blue:74 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Lime">
            <summary>
            Red:205 
            Green:220 
            Blue:57 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Yellow">
            <summary>
            Red:255 
            Green:235 
            Blue:59 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Amber">
            <summary>
            Red:255 
            Green:193 
            Blue:7 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Orange">
            <summary>
            Red:255 
            Green:152 
            Blue:0 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.DeepOrange">
            <summary>
            Red:255 
            Green:87 
            Blue:34 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Brown">
            <summary>
            Red:121 
            Green:85 
            Blue:72 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.Grey">
            <summary>
            Red:158 
            Green:158 
            Blue:158 
            Alpha:255 
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Color.BlueGrey">
            <summary>
            Red:96 
            Green:125 
            Blue:139 
            Alpha:255 
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Color.#ctor(System.Byte,System.Byte,System.Byte,System.Byte)">
            <summary>
            <see cref="T:BEditor.Core.Media.Color"/> 構造体の新しいインスタンスを初期化します
            </summary>
            <param name="r"><see cref="P:BEditor.Core.Media.Color.R"/> の値</param>
            <param name="g"><see cref="P:BEditor.Core.Media.Color.G"/> の値</param>
            <param name="b"><see cref="P:BEditor.Core.Media.Color.B"/> の値</param>
            <param name="a"><see cref="P:BEditor.Core.Media.Color.A"/> の値</param>
        </member>
        <member name="M:BEditor.Core.Media.Color.#ctor(System.Single,System.Single,System.Single,System.Single)">
            <summary>
            <see cref="T:BEditor.Core.Media.Color"/> 構造体の新しいインスタンスを初期化します
            </summary>
            <param name="r"><see cref="P:BEditor.Core.Media.Color.ScR"/> の値</param>
            <param name="g"><see cref="P:BEditor.Core.Media.Color.ScG"/> の値</param>
            <param name="b"><see cref="P:BEditor.Core.Media.Color.ScB"/> の値</param>
            <param name="a"><see cref="P:BEditor.Core.Media.Color.ScA"/> の値</param>
        </member>
        <member name="M:BEditor.Core.Media.Color.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Color.Equals(BEditor.Core.Media.Color)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Color.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Color.ToString">
            <inheritdoc/>
        </member>
        <member name="P:BEditor.Core.Media.Color.R">
            <summary>
            赤の値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Color.G">
            <summary>
            緑の値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Color.B">
            <summary>
            青の値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Color.A">
            <summary>
            アルファの値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Color.ScR">
            <summary>
            赤の値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Color.ScG">
            <summary>
            緑の値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Color.ScB">
            <summary>
            青の値を取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Color.ScA">
            <summary>
            アルファの値を取得または設定します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Color.op_Implicit(BEditor.Core.Media.Color)~System.Byte[]">
            <summary>
            <see cref="T:BEditor.Core.Media.Color"/> 構造体から <see cref="T:System.Byte"/> の配列を作成します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Color.op_Implicit(BEditor.Core.Media.Color)~System.Single[]">
            <summary>
            <see cref="T:BEditor.Core.Media.Color"/> 構造体から <see cref="T:System.Single"/>　の配列を作成します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Color.op_Implicit(BEditor.Core.Media.Color)~System.Drawing.Color">
            <summary>
            <see cref="T:BEditor.Core.Media.Color"/> 構造体から <see cref="T:System.Drawing.Color"/> を作成します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Color.op_Implicit(BEditor.Core.Media.Color)~OpenTK.Graphics.Color4">
            <summary>
            <see cref="T:BEditor.Core.Media.Color"/> 構造体から <see cref="T:OpenTK.Graphics.Color4"/> を作成します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Color.op_Implicit(OpenTK.Graphics.Color4)~BEditor.Core.Media.Color">
            <summary>
            <see cref="T:OpenTK.Graphics.Color4"/> 構造体から <see cref="T:BEditor.Core.Media.Color"/> を作成します
            </summary>
            <param name="c"></param>
        </member>
        <member name="M:BEditor.Core.Media.Color.op_Equality(BEditor.Core.Media.Color,BEditor.Core.Media.Color)">
            <summary>
            2つの <see cref="T:BEditor.Core.Media.Color"/> 構造体を比較します
            </summary>
            <returns>2つの <see cref="T:BEditor.Core.Media.Color"/> 構造体が等しい場合は <see langword="true"/> 、そうでない場合は <see langword="false"/> です</returns>
        </member>
        <member name="M:BEditor.Core.Media.Color.op_Inequality(BEditor.Core.Media.Color,BEditor.Core.Media.Color)">
            <summary>
            2つの <see cref="T:BEditor.Core.Media.Color"/> 構造体を比較します
            </summary>
            <returns>2つの <see cref="T:BEditor.Core.Media.Color"/> 構造体が異なる場合は <see langword="true"/> 、そうでない場合は <see langword="false"/> です</returns>
        </member>
        <member name="T:BEditor.Core.Media.Font">
            <summary>
            FreeTypeのFaceの一部をカプセル化します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Font.#ctor(System.String,System.Int32,System.Boolean,System.UInt32)">
            <summary>
            <see cref="T:BEditor.Core.Media.Font"/> クラスの新しいインスタンスを初期化します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Font.Style">
            <summary>
            フォントのスタイルを取得または設定します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Font.Height">
            <summary>
            フォントの高さを取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Font.Ascender">
            <summary>
            https://www.freetype.org/freetype2/docs/tutorial/step2.html を参照してください
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Font.Descender">
            <summary>
            https://www.freetype.org/freetype2/docs/tutorial/step2.html を参照してください
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Font.FaceFamilyName">
            <summary>
            フォントファミリー名を取得します
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Font.FaceStyleName">
            <summary>
            現在のフォントスタイル名を取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Font.SizeText(System.String,System.Int32@,System.Int32@)">
            <summary>
            指定した文字からサイズを測ります
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Font.RenderText(System.String,BEditor.Core.Media.Color)">
            <summary>
            指定した文字から <see cref="T:BEditor.Core.Media.Image"/> にレンダリングします
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Font.Quit">
            <summary>
            ライブラリを終了します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Font.Initialize">
            <summary>
            ライブラリを初期化します
            </summary>
        </member>
        <member name="T:BEditor.Core.Media.FontStyle">
            <summary>
            フォントスタイルを表します
            </summary>
        </member>
        <member name="T:BEditor.Core.Media.Image">
            <summary>
            OpenCv Mat を利用した画像オブジェクトを表します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(System.Int32,System.Int32)">
            <summary>
            <see cref="T:BEditor.Core.Media.Image"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="width">画像の横幅</param>
            <param name="height">画像の高さ</param>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(System.Int32,System.Int32,BEditor.Core.Media.ImageType)">
            <summary>
            <see cref="T:BEditor.Core.Media.Image"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="width">画像の横幅</param>
            <param name="height">画像の高さ</param>
            <param name="type">画像のチャンネル数などの情報</param>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(System.Int32,System.Int32,BEditor.Core.Media.ImageType,System.IntPtr)">
            <summary>
            画像データから <see cref="T:BEditor.Core.Media.Image"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="width">画像の横幅</param>
            <param name="height">画像の高さ</param>
            <param name="type">画像のチャンネル数などの情報</param>
            <param name="data">画像のデータ</param>
            <remarks>画像のデータはコピーされません</remarks>
            <exception cref="T:BEditor.Core.Exceptions.IntPtrZeroException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(System.IntPtr)">
            <summary>
            OpenCv Matのポインタから <see cref="T:BEditor.Core.Media.Image"/> クラスの新しいインスタンスを初期化します
            </summary>
            <param name="ptr">OpenCv Matのポインタ</param>
            <remarks>画像のデータはコピーされません</remarks>
            <exception cref="T:BEditor.Core.Exceptions.IntPtrZeroException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(BEditor.Core.Media.Image,BEditor.Core.Media.Rectangle)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <param name="rect"></param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <exception cref="T:System.Exception"/>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(System.IO.Stream,BEditor.Core.Media.ImageReadMode)">
            <summary>
            
            </summary>
            <param name="stream"></param>
            <param name="mode"></param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor(System.Byte[],BEditor.Core.Media.ImageReadMode)">
            <summary>
            
            </summary>
            <param name="imageBytes"></param>
            <param name="mode"></param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.#ctor">
            <summary>
            
            </summary>
            <exception cref="T:System.Exception"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Ptr">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Image.Data">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.DataEnd">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.DataPointer">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Width">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Height">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Size">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Type">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Step">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.ElemSize">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.IsContinuous">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.IsSubmatrix">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Depth">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Channels">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Total">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Dimension">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.ForEach(System.Action{System.Int32,System.Int32,System.Int32,System.Int32})">
            <summary>
            
            </summary>
            <param name="action"></param>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Clone">
            <summary>
            
            </summary>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Clone(BEditor.Core.Media.Rectangle)">
            <summary>
            
            </summary>
            <param name="rect"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Save(System.String)">
            <summary>
            
            </summary>
            <param name="file"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
            <exception cref="T:System.ArgumentNullException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.SubMatrix(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="rowStart"></param>
            <param name="rowEnd"></param>
            <param name="colStart"></param>
            <param name="colEnd"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.SubMatrix(BEditor.Core.Media.Range,BEditor.Core.Media.Range)">
            <summary>
            
            </summary>
            <param name="rowRange"></param>
            <param name="colRange"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.SubMatrix(BEditor.Core.Media.Rectangle)">
            <summary>
            
            </summary>
            <param name="roi"></param>
            <returns></returns>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
            <exception cref="T:System.ArgumentException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.CopyTo(BEditor.Core.Media.Image)">
            <summary>
            
            </summary>
            <param name="image"></param>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="P:BEditor.Core.Media.Image.Item(BEditor.Core.Media.Rectangle)">
            <summary>
            
            </summary>
            <param name="roi"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"/>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Ellipse(System.Int32,System.Int32,System.Int32,BEditor.Core.Media.Color)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="line"></param>
            <param name="color"></param>
            <returns></returns>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Rectangle(System.Int32,System.Int32,System.Int32,BEditor.Core.Media.Color)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <param name="line"></param>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Image.Text(System.Int32,BEditor.Core.Media.Color,System.String,BEditor.Core.Media.FontRecord,System.String,System.Boolean)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="color"></param>
            <param name="text"></param>
            <param name="font"></param>
            <param name="style"></param>
            <param name="rightToLeft"></param>
            <returns></returns>
            <exception cref="T:System.NotImplementedException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Flip(BEditor.Core.Media.FlipMode)">
            <summary>
            
            </summary>
            <param name="mode"></param>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.AreaExpansion(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="top"></param>
            <param name="bottom"></param>
            <param name="left"></param>
            <param name="right"></param>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.AreaExpansion(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Blur(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="blurSize"></param>
            <param name="alphaBlur"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.GaussianBlur(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="blurSize"></param>
            <param name="alphaBlur"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.MedianBlur(System.Int32,System.Boolean)">
            <summary>
            
            </summary>
            <param name="blurSize"></param>
            <param name="alphaBlur"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Border(System.Int32,BEditor.Core.Media.Color)">
            <summary>
            
            </summary>
            <param name="size"></param>
            <param name="color"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.SetColor(BEditor.Core.Media.Color)">
            <summary>
            
            </summary>
            <param name="color"></param>
        </member>
        <member name="M:BEditor.Core.Media.Image.Shadow(System.Single,System.Single,System.Int32,System.Single,BEditor.Core.Media.Color)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="blur"></param>
            <param name="alpha"></param>
            <param name="color"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Dilate(System.Int32)">
            <summary>
            
            </summary>
            <param name="f"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Erode(System.Int32)">
            <summary>
            
            </summary>
            <param name="f"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
            <exception cref="T:BEditor.Core.Exceptions.NativeException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.Clip(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="top"></param>
            <param name="bottom"></param>
            <param name="left"></param>
            <param name="right"></param>
            <exception cref="T:System.ArgumentException"/>
            <exception cref="T:System.ObjectDisposedException"/>
        </member>
        <member name="M:BEditor.Core.Media.Image.ToString">
            <inheritdoc/>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.UnChanged">
            <summary>
            IMREAD_UNCHANGED
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.GrayScale">
            <summary>
            IMREAD_GRAYSCALE
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.Color">
            <summary>
            IMREAD_COLOR
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.AnyDepth">
            <summary>
            IMREAD_ANYDEPTH
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.AnyColor">
            <summary>
            IMREAD_ANYCOLOR
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.LoadGdal">
            <summary>
            IMREAD_LOAD_GDAL
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.ReducedGrayScale2">
            <summary>
            IMREAD_REDUCED_GRAYSCALE_2
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.ReducedColor2">
            <summary>
            IMREAD_REDUCED_COLOR_2
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.ReducedGrayScale4">
            <summary>
            IMREAD_REDUCED_GRAYSCALE_4
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.ReducedColor4">
            <summary>
            IMREAD_REDUCED_COLOR_4
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.ReducedGrayScale8">
            <summary>
            IMREAD_REDUCED_GRAYSCALE_8
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.ReducedColor8">
            <summary>
            IMREAD_REDUCED_COLOR_8
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.ImageReadMode.IgnoreOrientation">
            <summary>
            IMREAD_IGNORE_ORIENTATION
            </summary>
        </member>
        <member name="T:BEditor.Core.Media.Point2">
            <summary>
            
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Point2.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Point2.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="P:BEditor.Core.Media.Point2.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Point2.Y">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Point2.Add(BEditor.Core.Media.Point2,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.Add(BEditor.Core.Media.Point2,BEditor.Core.Media.Point2)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.Subtract(BEditor.Core.Media.Point2,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.Subtract(BEditor.Core.Media.Point2,BEditor.Core.Media.Point2)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point2.Equals(BEditor.Core.Media.Point2)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point2.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point2.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Addition(BEditor.Core.Media.Point2,BEditor.Core.Media.Point2)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Addition(BEditor.Core.Media.Point2,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Subtraction(BEditor.Core.Media.Point2,BEditor.Core.Media.Point2)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Subtraction(BEditor.Core.Media.Point2,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Equality(BEditor.Core.Media.Point2,BEditor.Core.Media.Point2)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Inequality(BEditor.Core.Media.Point2,BEditor.Core.Media.Point2)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Explicit(BEditor.Core.Media.Point2)~System.Drawing.Point">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:BEditor.Core.Media.Point2.op_Explicit(System.Drawing.Point)~BEditor.Core.Media.Point2">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:BEditor.Core.Media.Point3">
            <summary>
            
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Point3.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Point3.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <param name="z"></param>
        </member>
        <member name="P:BEditor.Core.Media.Point3.X">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Point3.Y">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Point3.Z">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Point3.Add(BEditor.Core.Media.Point3,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.Add(BEditor.Core.Media.Point3,BEditor.Core.Media.Point3)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.Subtract(BEditor.Core.Media.Point3,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.Subtract(BEditor.Core.Media.Point3,BEditor.Core.Media.Point3)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point3.Equals(BEditor.Core.Media.Point3)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point3.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point3.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Addition(BEditor.Core.Media.Point3,BEditor.Core.Media.Point3)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Addition(BEditor.Core.Media.Point3,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Subtraction(BEditor.Core.Media.Point3,BEditor.Core.Media.Point3)">
            <summary>
            
            </summary>
            <param name="point1"></param>
            <param name="point2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Subtraction(BEditor.Core.Media.Point3,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="point"></param>
            <param name="size"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Equality(BEditor.Core.Media.Point3,BEditor.Core.Media.Point3)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Inequality(BEditor.Core.Media.Point3,BEditor.Core.Media.Point3)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Explicit(BEditor.Core.Media.Point3)~System.Drawing.Point">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Explicit(System.Drawing.Point)~BEditor.Core.Media.Point3">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Explicit(BEditor.Core.Media.Point3)~OpenTK.Vector3">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="M:BEditor.Core.Media.Point3.op_Explicit(OpenTK.Vector3)~BEditor.Core.Media.Point3">
            <summary>
            
            </summary>
            <param name="point"></param>
        </member>
        <member name="T:BEditor.Core.Media.Range">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Range.Start">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Range.End">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Range.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="start"></param>
            <param name="end"></param>
        </member>
        <member name="P:BEditor.Core.Media.Range.All">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Range.Equals(BEditor.Core.Media.Range)">
            <inheritdoc />
        </member>
        <member name="M:BEditor.Core.Media.Range.Equals(System.Object)">
            <inheritdoc />
        </member>
        <member name="M:BEditor.Core.Media.Range.GetHashCode">
            <inheritdoc />
        </member>
        <member name="M:BEditor.Core.Media.Range.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Range.op_Equality(BEditor.Core.Media.Range,BEditor.Core.Media.Range)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Range.op_Inequality(BEditor.Core.Media.Range,BEditor.Core.Media.Range)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="T:BEditor.Core.Media.Rectangle">
            <summary>
            
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Rectangle.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            コンストラクタ
            </summary>
            <param name="x">右上のX座標</param>
            <param name="y">右上のY座標</param>
            <param name="width">横幅</param>
            <param name="height">高さ</param>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.#ctor(BEditor.Core.Media.Point2,BEditor.Core.Media.Size)">
            <summary>
            コンストラクタ
            </summary>
            <param name="point">右上のpoint</param>
            <param name="size">サイズ</param>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.X">
            <summary>
            Rectangleの右上のX座標
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Y">
            <summary>
            Rectangleの右上のY座標
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Width">
            <summary>
            Rectangleの横幅
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Height">
            <summary>
            Rectangleの高さ
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Top">
            <summary>
            上端のY座標
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Bottom">
            <summary>
            下端のyY座標
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Left">
            <summary>
            左端のX座標
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Right">
            <summary>
            右端のX座標
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.TopLeft">
            <summary>
            左上の頂点
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.BottomRight">
            <summary>
            右下の頂点
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Point">
            <summary>
            Rectangleの左上のPoint
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Rectangle.Size">
            <summary>
            Rectangleのサイズ
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.FromLTRB(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            指定した辺の位置を持つRectangleを作成します。
            </summary>
            <param name="left">左上のx座標</param>
            <param name="top">左上のy座標</param>
            <param name="right">右下のx座標</param>
            <param name="bottom">右下のy座標</param>
            <returns>作られたRectangle</returns>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Inflate(BEditor.Core.Media.Rectangle,System.Int32,System.Int32)">
            <summary>
            指定の量だけ膨張します
            </summary>
            <param name="rect">対象のRectangle</param>
            <param name="x">水平方向に膨張量</param>
            <param name="y">垂直方向に膨張量</param>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Intersect(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Rectangle)">
            <summary>
            2つのRectangleの交差部分を表すRectangleを取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Union(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Rectangle)">
            <summary>
            2つのRectangleの和集合を表す矩形を取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Inflate(System.Int32,System.Int32)">
            <summary>
            指定の量だけ膨張します
            </summary>
            <param name="width">水平方向に膨張量</param>
            <param name="height">垂直方向に膨張量</param>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Inflate(BEditor.Core.Media.Size)">
            <summary>
            指定の量だけ膨張します
            </summary>
            <param name="size">膨張量</param>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Intersect(BEditor.Core.Media.Rectangle)">
            <summary>
            2つのRectangleの交差部分を表すRectangleを取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.IntersectsWith(BEditor.Core.Media.Rectangle)">
            <summary>
            指定したRectangleがこのRectangleと交差するかどうか
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Union(BEditor.Core.Media.Rectangle)">
            <summary>
            2つのRectangleの和集合を表す矩形を取得します
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Contains(System.Int32,System.Int32)">
            <summary>
            指定したPointがこのRectangleに含まれているかどうかを判断する
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Contains(BEditor.Core.Media.Point2)">
            <summary>
            指定したPointがこのRectangleに含まれているかどうかを判断する
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Contains(BEditor.Core.Media.Rectangle)">
            <summary>
            指定したRectangleがこのRectangleに含まれているかどうかを判断する
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Equals(BEditor.Core.Media.Rectangle)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Equality(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Rectangle)">
            <summary>
            2つのRectangleの位置とサイズが等しいか
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Inequality(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Rectangle)">
            <summary>
            2つのRectangleの位置とサイズが等しくないか
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Addition(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Point2)">
            <summary>
            Rectangleを移動させる
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Subtraction(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Point2)">
            <summary>
            Rectangleを移動させる
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Addition(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Size)">
            <summary>
            Rectangleを膨張する
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Subtraction(BEditor.Core.Media.Rectangle,BEditor.Core.Media.Size)">
            <summary>
            Rectangleを縮小する
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Explicit(BEditor.Core.Media.Rectangle)~System.Drawing.Rectangle">
            <summary>
            
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:BEditor.Core.Media.Rectangle.op_Explicit(System.Drawing.Rectangle)~BEditor.Core.Media.Rectangle">
            <summary>
            
            </summary>
            <param name="rect"></param>
        </member>
        <member name="T:BEditor.Core.Media.Size">
            <summary>
            
            </summary>
        </member>
        <member name="F:BEditor.Core.Media.Size.Empty">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Size.Width">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Size.Height">
            <summary>
            
            </summary>
        </member>
        <member name="P:BEditor.Core.Media.Size.Aspect">
            <summary>
            
            </summary>
        </member>
        <member name="M:BEditor.Core.Media.Size.#ctor(System.Int32,System.Int32)">
            <summary>
            
            </summary>
            <param name="width"></param>
            <param name="height"></param>
        </member>
        <member name="M:BEditor.Core.Media.Size.Add(BEditor.Core.Media.Size,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.Subtract(BEditor.Core.Media.Size,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.Equals(BEditor.Core.Media.Size)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Size.Equals(System.Object)">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Size.ToString">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Size.GetHashCode">
            <inheritdoc/>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Addition(BEditor.Core.Media.Size,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Subtraction(BEditor.Core.Media.Size,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="size1"></param>
            <param name="size2"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Multiply(BEditor.Core.Media.Size,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Division(BEditor.Core.Media.Size,System.Int32)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Equality(BEditor.Core.Media.Size,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Inequality(BEditor.Core.Media.Size,BEditor.Core.Media.Size)">
            <summary>
            
            </summary>
            <param name="left"></param>
            <param name="right"></param>
            <returns></returns>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Explicit(BEditor.Core.Media.Size)~System.Drawing.Size">
            <summary>
            
            </summary>
            <param name="rect"></param>
        </member>
        <member name="M:BEditor.Core.Media.Size.op_Explicit(System.Drawing.Size)~BEditor.Core.Media.Size">
            <summary>
            
            </summary>
            <param name="rect"></param>
        </member>
        <member name="P:BEditor.Core.Plugin.IPlugin.PluginName">
            <summary>
            プラグインの名前
            </summary>
        </member>
        <member name="P:BEditor.Core.Plugin.IPlugin.Infomation">
            <summary>
            プラグインの説明
            </summary>
        </member>
        <member name="M:BEditor.Core.Plugin.IPlugin.SettingCommand">
            <summary>
            プラグインの設定を開くときに呼び出されます
            </summary>
        </member>
        <member name="P:BEditor.Core.Plugin.IEasingFunctions.EasingFunc">
            <summary>
            B_Editor.Models.Datas.PropertyData.EasingSetting.EasingFuncを継承しているクラスのTypeと名前が入ったList
            </summary>
        </member>
        <member name="P:BEditor.Core.Plugin.IEffects.Effects">
            <summary>
            B_Editor.Models.Datas.EffectData.EffectElementを継承しているクラスのTypeと名前が入ったList
            </summary>
        </member>
        <member name="P:BEditor.Core.Plugin.IObjects.Objects">
            <summary>
            B_Editor.Models.Datas.ObjectData.ObjectElement又はB_Editor.Models.Datas.ObjectData.DefaultData.DefaultImageObjectを継承しているクラスのTypeと名前が入ったList
            </summary>
        </member>
        <member name="M:BEditor.Core.Plugin.PluginLoadedEventArgs.#ctor(System.String,System.Boolean,System.Exception)">
            <summary>
            PluginLoadedEventArgsのコンストラクタ
            </summary>
            <param name="filename">Dllのファイル</param>
            <param name="issuccesful">成功したかのブーリアン</param>
            <param name="e">失敗した場合のException</param>
        </member>
        <member name="P:BEditor.Core.Plugin.PluginLoadedEventArgs.FileName">
            <summary>
            Dllのファイル名
            </summary>
        </member>
        <member name="P:BEditor.Core.Plugin.PluginLoadedEventArgs.IsSuccessful">
            <summary>
            成功したかのブーリアン
            </summary>
        </member>
        <member name="P:BEditor.Core.Plugin.PluginLoadedEventArgs.Exception">
            <summary>
            失敗した場合のException
            </summary>
        </member>
        <member name="E:BEditor.Core.Plugin.PluginManager.PluginsLoaded">
            <summary>
            すべてのDllがロードされたあとに発生します
            </summary>
        </member>
        <member name="E:BEditor.Core.Plugin.PluginManager.PluginLoaded">
            <summary>
            一つのDllが読み込まれたあとに発生します
            </summary>
        </member>
        <member name="T:BEditor.Core.Properties.Resources">
            <summary>
              ローカライズされた文字列などを検索するための、厳密に型指定されたリソース クラスです。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ResourceManager">
            <summary>
              このクラスで使用されているキャッシュされた ResourceManager インスタンスを返します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Culture">
            <summary>
              すべてについて、現在のスレッドの CurrentUICulture プロパティをオーバーライドします
              現在のスレッドの CurrentUICulture プロパティをオーバーライドします。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources._3DObject">
            <summary>
              3DObject に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessCreate_new">
            <summary>
              Create New(_N) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessEdit">
            <summary>
              Edit(_E) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessFile">
            <summary>
              File(_F) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessHelp">
            <summary>
              Help(_H) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessOpen">
            <summary>
              Open(_O) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessOut">
            <summary>
              Output(_O) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessProject">
            <summary>
              Project(_P) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessSave_as">
            <summary>
              Save as(_S) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessTool">
            <summary>
              Tool(_T) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AccessView">
            <summary>
              View(_V) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ActivityLog">
            <summary>
              ActivityLog に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AddClip">
            <summary>
              Add a clip に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AddKeyframe">
            <summary>
              Add a keyframe に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Adjust_coordinates">
            <summary>
              Adjust coordinates に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Alpha">
            <summary>
              Transparency に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Ambient">
            <summary>
              Ambient に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Angle">
            <summary>
              Angle に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AngleX">
            <summary>
              X-axis angle に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AngleY">
            <summary>
              Y-axis angle に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AngleZ">
            <summary>
              Z-axis angle に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AppClose">
            <summary>
              Close に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Appearance">
            <summary>
              Appearance に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.AreaExpansion">
            <summary>
              Area expansion に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Audio">
            <summary>
              Audio に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.BackupFile">
            <summary>
              BackupFile に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Ball">
            <summary>
              Ball に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Blend">
            <summary>
              Blend に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Blur">
            <summary>
              Blur に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.BlurMode">
            <summary>
              Blur method に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Border">
            <summary>
              Border に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Bottom">
            <summary>
              Bottom に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Camera">
            <summary>
              Camera に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Cancel">
            <summary>
              Cancel に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.CenterX">
            <summary>
              Center X に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.CenterY">
            <summary>
              Center Y に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.CenterZ">
            <summary>
              Center Z に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Circle">
            <summary>
              Circle に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ClipHeight">
            <summary>
              Clip height (changes apply after restarting the application) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ClipInfo">
            <summary>
              Clip information に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Clipping">
            <summary>
              Clipping に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Close">
            <summary>
              Close に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Color">
            <summary>
              Color に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ColorKey">
            <summary>
              ColorKey に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ColorPalette">
            <summary>
              Color palette に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ColorPicker">
            <summary>
              ColorPicker に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Continue">
            <summary>
              Continue に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Coordinate">
            <summary>
              Coodinate に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Copy">
            <summary>
              Copy に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Create">
            <summary>
              Create に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Create_new">
            <summary>
              Create New に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Create_project">
            <summary>
              Create a project に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Cube">
            <summary>
              Cube に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Cut">
            <summary>
              Cut に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.DepthFunction">
            <summary>
              DepthFunction に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.DepthTest">
            <summary>
              DepthTest に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.DepthTestEneble">
            <summary>
              Enable Depth Testing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.DetailedSettings">
            <summary>
              Detailed settings に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Diffuse">
            <summary>
              Diffuse に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Diffusion">
            <summary>
              Diffusion に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Dilate">
            <summary>
              Dilate に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.DirectionalLightSource">
            <summary>
              Directional Light Source に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.DropShadow">
            <summary>
              DropShadow に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Edit">
            <summary>
              Edit に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.EffectFailed">
            <summary>
              The effect failed. [{0}] に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Effects">
            <summary>
              Effects に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.EnableErrorLog">
            <summary>
              Enable error log に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Erode">
            <summary>
              Erode に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ErrorHasOccurred">
            <summary>
              An error has occurred. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ErrorMessage">
             <summary>
               An error has occurred.
            Please let the developer know. に類似しているローカライズされた文字列を検索します。
             </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ExceptionInfomationHidden">
            <summary>
              Hide error information に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ExceptionInfomationShow">
            <summary>
              Display error information に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ExceptionMesssage">
            <summary>
              Messsage に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ExceptionOpenFileSaved">
            <summary>
              The file you had open has been saved to {0}. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ExceptionStackTrace">
            <summary>
              StackTrace に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FailedToLoad">
            <summary>
              {0} failed to load. に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Figure">
            <summary>
              Figure に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.File">
            <summary>
              File に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FileSaved">
            <summary>
              The file has been saved に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Font">
            <summary>
              Font に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStretches">
            <summary>
              FontStretches に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStyle_Bold">
            <summary>
              Bold に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStyle_Italic">
            <summary>
              Italic に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStyle_Normal">
            <summary>
              Normal に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStyle_Oblique">
            <summary>
              Oblique に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStyle_StrikeThrough">
            <summary>
              StrikeThrough に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStyle_UnderLine">
            <summary>
              UnderLine に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontStyles">
            <summary>
              FontStyles に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.FontWeights">
            <summary>
              FontWeights に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Fov">
            <summary>
              viewing angle に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Framerate">
            <summary>
              Framerate に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Frequency">
            <summary>
              Frequency に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.From_backup">
            <summary>
              Created from a backup に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Gauss">
            <summary>
              Gauss に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.General">
            <summary>
              General に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Height">
            <summary>
              Height に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Hide">
            <summary>
              Hide に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Image">
            <summary>
              Image に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ImageFile">
            <summary>
              Image file に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ImageOutput">
            <summary>
              Image Output に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Infomation">
            <summary>
              Infomation に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Install">
            <summary>
              Install に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.InstalledPlugins">
            <summary>
              Installed plug-ins に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Left">
            <summary>
              Left に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Library">
            <summary>
              Library に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Lighting">
            <summary>
              Lighting に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Line">
            <summary>
              Line width に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Material">
            <summary>
              Material に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Median">
            <summary>
              Median に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Menu">
            <summary>
              Menu に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Monoc">
            <summary>
              Monochromatic に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.MultiLayerization">
            <summary>
              Multi layerization に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Name">
            <summary>
              Name に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.No">
            <summary>
              No に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.OK">
            <summary>
              OK に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Open">
            <summary>
              Open に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Others">
            <summary>
              Others に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Outputs">
            <summary>
              Outputs に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Panel">
            <summary>
              Panel に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Paste">
            <summary>
              Paste に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Perspective">
            <summary>
              Perspective に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Plugins">
            <summary>
              Plugins に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.PointLightSource">
            <summary>
              Point Light Source に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Project">
            <summary>
              Project に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ProjectFile">
            <summary>
              Project file に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ProjectFilePath">
            <summary>
              The folder with project files に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Python">
            <summary>
              Python に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Range">
            <summary>
              Range に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Remove">
            <summary>
              Remove に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Retry">
            <summary>
              Retry に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Right">
            <summary>
              Right に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Samplingrate">
            <summary>
              Samplingrate に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Save">
            <summary>
              Save に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Save_as">
            <summary>
              Save as に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.SaveFolder">
            <summary>
              Save folder に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Scenes">
            <summary>
              Scenes に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Script">
            <summary>
              Script に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Separate">
            <summary>
              Separate に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Settings">
            <summary>
              Settings に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Shininess">
            <summary>
              Shininess に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Show">
            <summary>
              Show に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Size">
            <summary>
              Size に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Specular">
            <summary>
              Specular に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Speed">
            <summary>
              Speed に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.SpotLight">
            <summary>
              SpotLight に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Square">
            <summary>
              Square に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Standard">
            <summary>
              Standard に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Start">
            <summary>
              Start frame に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.TargetX">
            <summary>
              Target x に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.TargetY">
            <summary>
              Target y に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.TargetZ">
            <summary>
              Target z に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Text">
            <summary>
              Text に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.TimeLine">
            <summary>
              TimeLine に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Tool">
            <summary>
              Tool に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Top">
            <summary>
              Top に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Type">
            <summary>
              Type に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.TypeOfDraw">
            <summary>
              Standardized drawing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.TypeOfDrawPlus">
            <summary>
              Extended drawing に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Uninstall">
            <summary>
              Uninstall に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.UninstallPlugin">
            <summary>
              Uninstall {0} に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.UseAutoBackup">
            <summary>
              Use automatic backups に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.UseDarkMode">
            <summary>
              Use dark mode (effective after restarting the application) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.UseGDI">
            <summary>
              Use GDI for rendering 2D shapes (WPF is used when off) に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ValueIsNotValid">
            <summary>
              value is not valid に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Varsion">
            <summary>
              Varsion に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Video">
            <summary>
              Video に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.VideoFile">
            <summary>
              Video file に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.VideoOutput">
            <summary>
              Video Output に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.View">
            <summary>
              View に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Width">
            <summary>
              Width に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.WidthOf1Frame">
            <summary>
              Width of 1 frame に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.X">
            <summary>
              X に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Y">
            <summary>
              Y に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Yes">
            <summary>
              Yes に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Z">
            <summary>
              Z に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ZFar">
            <summary>
              Zfar に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.ZNear">
            <summary>
              Znear に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="P:BEditor.Core.Properties.Resources.Zoom">
            <summary>
              Zoom に類似しているローカライズされた文字列を検索します。
            </summary>
        </member>
        <member name="M:BEditor.Core.Renderer.BaseGraphicsContext.Clear(System.Boolean,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single,System.Single)">
            <summary>
            カメラを設定
            </summary>
            <param name="Perspective">遠近法を使うか</param>
            <param name="x">CameraX</param>
            <param name="y">CameraY</param>
            <param name="z">CameraZ</param>
            <param name="tx">TargetX</param>
            <param name="ty">TargetY</param>
            <param name="tz">TargetZ</param>
            <param name="near">ZNear</param>
            <param name="far">ZFar</param>
        </member>
    </members>
</doc>
