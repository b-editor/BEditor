@using BEditor.Core.Data
@using BEditor.Data
@using BEditor.Models

<MatTabGroup ActiveIndex="@Index" ActiveIndexChanged="@(index => Scene.SelectItem = Scene.SelectItems[index])">
    @foreach (var clip in Scene.SelectItems)
    {
        <MatTab>
            <LabelContent>
                <div style="color: #ffffff; text-transform: none;">
                    @clip.LabelText
                    <MatIcon Style="font-size: 14px;" Icon="@MatIconNames.Close"></MatIcon>
                </div>
            </LabelContent>
            <ChildContent>
                <ClipPropertyView Clip="clip"></ClipPropertyView>
            </ChildContent>
        </MatTab>
    }
</MatTabGroup>

@code
{
    protected override Task OnInitializedAsync()
    {
        Scene.PropertyChanged += async(_, e) =>
        {
            if(e.PropertyName is nameof(Scene.SelectItem) or nameof(Scene.SelectItems))
            {
                await this.InvokeAsync(StateHasChanged);
            }
        };
        
        return base.OnInitializedAsync();
    }

    public Scene Scene => AppData.Current.Project.Value.PreviewScene;
    private int Index => Scene.SelectItems.IndexOf(Scene.SelectItem);
}
