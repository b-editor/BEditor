<UserControl
    x:Class="BEditor.Views.TimeLines.TimeLine"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:BEditor.ViewModels"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:BEditor.Views.TimeLines"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:md="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:properties="clr-namespace:BEditor.Properties;assembly=BEditor.Core"
    Loaded="UserControl_Loaded"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    Unloaded="UserControl_Unloaded"
    mc:Ignorable="d">
    <UserControl.Resources>
        <Style x:Key="TimelineHideShowToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="Background" Value="{DynamicResource MaterialDesignBodyLight}" />
            <Setter Property="Foreground" Value="{DynamicResource MaterialDesignBody}" />
            <Setter Property="FontSize" Value="18" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Padding" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Grid
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            ClipToBounds="True">
                            <Rectangle
                                x:Name="HoverEllipse"
                                Fill="Transparent"
                                Stroke="Transparent"
                                StrokeThickness="1" />
                            <Rectangle
                                x:Name="CheckedEllipse"
                                Fill="{TemplateBinding Background}"
                                RenderTransformOrigin="0.5, 0.5">
                                <Rectangle.RenderTransform>
                                    <ScaleTransform x:Name="CheckedEllipseScale" CenterX="0.5" CenterY="0.5" ScaleX="1.0" ScaleY="1.0" />
                                </Rectangle.RenderTransform>
                            </Rectangle>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}" />
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetProperty="(UIElement.Opacity)"
                                                To="0.23"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition From="*" To="Checked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames
                                                    Storyboard.TargetName="CheckedEllipseScale"
                                                    Storyboard.TargetProperty="ScaleX"
                                                    Duration="0:0:0.2">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="1.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames
                                                    Storyboard.TargetName="CheckedEllipseScale"
                                                    Storyboard.TargetProperty="ScaleY"
                                                    Duration="0:0:0.2">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="0" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="1.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition From="Checked" To="Unchecked">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames
                                                    Storyboard.TargetName="CheckedEllipseScale"
                                                    Storyboard.TargetProperty="ScaleX"
                                                    Duration="0:0:0.2">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames
                                                    Storyboard.TargetName="CheckedEllipseScale"
                                                    Storyboard.TargetProperty="ScaleY"
                                                    Duration="0:0:0.2">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.1" Value="0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="1.0"
                                                Duration="0" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="1.0"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked">
                                        <Storyboard>
                                            <DoubleAnimation
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleX"
                                                To="0"
                                                Duration="0" />
                                            <DoubleAnimation
                                                Storyboard.TargetName="CheckedEllipseScale"
                                                Storyboard.TargetProperty="ScaleY"
                                                To="0"
                                                Duration="0" />
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="HoverEllipse" Property="Stroke" Value="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Background}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200" />
            <ColumnDefinition Width="1173*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="32" />
            <RowDefinition Height="413*" />
        </Grid.RowDefinitions>

        <ScrollViewer
            x:Name="ScrollLine"
            Grid.Row="0"
            Grid.RowSpan="2"
            Grid.Column="1"
            Background="{DynamicResource MaterialDesignCardBackground}"
            HorizontalScrollBarVisibility="Visible"
            PreviewMouseWheel="ScrollLine_PreviewMouseWheel"
            ScrollChanged="ScrollLine_ScrollChanged">
            <Grid
                x:Name="timelinegrid"
                Width="{Binding TrackWidth.Value, Mode=OneWay}"
                Height="Auto"
                HorizontalAlignment="Left"
                Background="{DynamicResource MaterialDesignBodyLight}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseMove">
                        <i:InvokeCommandAction
                            Command="{Binding TimeLineMouseMoveCommand, Mode=OneTime}"
                            EventArgsConverter="{x:Static convert:MousePositionConverter.Converter}"
                            EventArgsConverterParameter="{Binding RelativeSource={RelativeSource AncestorType=Grid}}"
                            PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonUp">
                        <i:InvokeCommandAction Command="{Binding TimeLineMouseLeftUpCommand, Mode=OneTime}" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeftButtonDown">
                        <i:InvokeCommandAction
                            Command="{Binding TimeLineMouseLeftDownCommand, Mode=OneTime}"
                            EventArgsConverter="{x:Static convert:MousePositionConverter.Converter}"
                            EventArgsConverterParameter="{Binding RelativeSource={RelativeSource AncestorType=Grid}}"
                            PassEventArgsToCommand="True" />
                    </i:EventTrigger>
                    <i:EventTrigger EventName="MouseLeave">
                        <i:InvokeCommandAction Command="{Binding TimeLineMouseLeaveCommand, Mode=OneTime}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>

                <VirtualizingStackPanel
                    x:Name="Layer"
                    Width="{Binding TrackWidth.Value, Mode=OneWay}"
                    HorizontalAlignment="Left"
                    Cursor="{Binding LayerCursor.Value, Mode=OneWay}"
                    VirtualizingPanel.IsVirtualizing="True"
                    VirtualizingPanel.VirtualizationMode="Recycling">
                    <VirtualizingStackPanel.ContextMenu>
                        <ContextMenu x:Name="TimelineMenu" Margin="0,0,0,0">
                            <MenuItem>
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <VirtualizingStackPanel Orientation="Horizontal">
                                            <md:PackIcon Margin="5,0,5,0" Kind="ContentCut" />
                                            <TextBlock Margin="20,0,5,0" Text="{x:Static properties:Resources.Cut}" />
                                        </VirtualizingStackPanel>
                                        <TextBlock Grid.Column="1" Text="Ctrl+X" />
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem>
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <VirtualizingStackPanel Orientation="Horizontal">
                                            <md:PackIcon Margin="5,0,5,0" Kind="ContentCopy" />
                                            <TextBlock Margin="20,0,5,0" Text="{x:Static properties:Resources.Copy}" />
                                        </VirtualizingStackPanel>
                                        <TextBlock Grid.Column="1" Text="Ctrl+C" />
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <MenuItem Command="{Binding PasteCommand, Mode=OneTime}">
                                <MenuItem.Header>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200" />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <VirtualizingStackPanel Orientation="Horizontal">
                                            <md:PackIcon Margin="5,0,5,0" Kind="ContentPaste" />
                                            <TextBlock Margin="20,0,5,0" Text="{x:Static properties:Resources.Paste}" />
                                        </VirtualizingStackPanel>
                                        <TextBlock Grid.Column="1" Text="Ctrl+V" />
                                    </Grid>
                                </MenuItem.Header>
                            </MenuItem>
                            <Separator />
                            <MenuItem Command="{Binding SettingShowCommand, Mode=OneTime}">
                                <MenuItem.Header>
                                    <VirtualizingStackPanel Orientation="Horizontal">
                                        <md:PackIcon Margin="5,0,5,0" Kind="Settings" />
                                        <TextBlock Margin="20,0,5,0" Text="{x:Static properties:Resources.Settings}" />
                                    </VirtualizingStackPanel>
                                </MenuItem.Header>
                            </MenuItem>
                        </ContextMenu>
                    </VirtualizingStackPanel.ContextMenu>
                    <Grid
                        x:Name="scale"
                        Width="{Binding TrackWidth.Value, Mode=OneWay}"
                        Height="32"
                        HorizontalAlignment="Left"
                        Background="{DynamicResource MaterialDesignCardBackground}" />
                </VirtualizingStackPanel>
                <Border
                    Width="1.25"
                    Margin="{Binding SeekbarMargin.Value, Mode=OneWay}"
                    HorizontalAlignment="Left"
                    Background="Red" />
            </Grid>
        </ScrollViewer>
        <ScrollViewer
            x:Name="ScrollLabel"
            Grid.Row="1"
            HorizontalContentAlignment="Stretch"
            VerticalContentAlignment="Stretch"
            VerticalScrollBarVisibility="Hidden">
            <VirtualizingStackPanel
                x:Name="LayerLabel"
                HorizontalAlignment="Stretch"
                VerticalAlignment="Stretch"
                VirtualizingPanel.IsVirtualizing="True"
                VirtualizingPanel.VirtualizationMode="Recycling" />
        </ScrollViewer>
    </Grid>
</UserControl>
