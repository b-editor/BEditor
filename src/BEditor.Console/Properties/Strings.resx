<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="OutputProjectToJson" xml:space="preserve">
    <value>Output the project in Json format.</value>
  </data>
  <data name="ProjectFile" xml:space="preserve">
    <value>Project file</value>
  </data>
  <data name="OutputDestinationFile" xml:space="preserve">
    <value>Output destination file</value>
  </data>
  <data name="FailedToLoadProject" xml:space="preserve">
    <value>Failed to load the project file.</value>
  </data>
  <data name="SaveFrameToImageFile" xml:space="preserve">
    <value>Save the specified frame of the scene as an image.</value>
  </data>
  <data name="FrameToOutput" xml:space="preserve">
    <value>Frame to output</value>
  </data>
  <data name="SceneToOutput" xml:space="preserve">
    <value>Frame to scene</value>
  </data>
  <data name="OutputVideo" xml:space="preserve">
    <value>Output the scene to video.</value>
  </data>
  <data name="CreateNewProject" xml:space="preserve">
    <value>Create a new project.</value>
  </data>
  <data name="NameOfProject" xml:space="preserve">
    <value>Name of new project</value>
  </data>
  <data name="IsLoading" xml:space="preserve">
    <value>{0} is loading.</value>
  </data>
  <data name="IsDownloading" xml:space="preserve">
    <value>{0} is downloading.</value>
  </data>
  <data name="IsExtractedAndPlaced" xml:space="preserve">
    <value>{0} is extracted and placed.</value>
  </data>
  <data name="FFmpegNotFound" xml:space="preserve">
    <value>FFmpeg was not found.</value>
  </data>
  <data name="ClipExistsInTheSpecifiedLocation" xml:space="preserve">
    <value>Cannot place a new clip because a clip already exists in the specified location.</value>
  </data>
  <data name="SavedTo" xml:space="preserve">
    <value>Saved to {0}.</value>
  </data>
  <data name="FailedToSave" xml:space="preserve">
    <value>Failed to save.</value>
  </data>
  <data name="ManagementName" xml:space="preserve">
    <value>Management Name</value>
  </data>
  <data name="This data cannot be displayed in a list." xml:space="preserve">
    <value>This data cannot be displayed in a list.</value>
  </data>
  <data name="PropertyNotFound" xml:space="preserve">
    <value>Property not found.</value>
  </data>
  <data name="FailedToConvertPropertiesToJson" xml:space="preserve">
    <value>Failed to convert properties to Json.</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>{0} not found.</value>
  </data>
  <data name="AddedClip" xml:space="preserve">
    <value>Added a clip to start: {0}, end: {1}, layer: {2}.</value>
  </data>
  <data name="AddedEffect" xml:space="preserve">
    <value>Added a effect.</value>
  </data>
  <data name="RemovedClip" xml:space="preserve">
    <value>Removed a clip.</value>
  </data>
  <data name="SelectClip" xml:space="preserve">
    <value>Select a clip.</value>
  </data>
  <data name="IndexIsOutOfRange" xml:space="preserve">
    <value>Index is out of range.</value>
  </data>
  <data name="RemovedEffect" xml:space="preserve">
    <value>Removed a effect.</value>
  </data>
  <data name="MovedClip" xml:space="preserve">
    <value>Moved a clip.</value>
  </data>
  <data name="LayerIsHidden" xml:space="preserve">
    <value>Layer:{0} is hidden.</value>
  </data>
  <data name="EnumerateFonts" xml:space="preserve">
    <value>Enumerate fonts.</value>
  </data>
  <data name="InstallIt" xml:space="preserve">
    <value>Do you want to install it? (Y/N)</value>
  </data>
  <data name="ExecuteTheCommand" xml:space="preserve">
    <value>Execute the following command.</value>
  </data>
  <data name="ProjectFileNotFound" xml:space="preserve">
    <value>Project file not found.</value>
  </data>
  <data name="ClipType" xml:space="preserve">
    <value>Clip type</value>
  </data>
  <data name="InvalidValue" xml:space="preserve">
    <value>Invalid value.</value>
  </data>
  <data name="AddClip" xml:space="preserve">
    <value>Add a clip.</value>
  </data>
  <data name="Start" xml:space="preserve">
    <value>Start frame</value>
  </data>
  <data name="Layer" xml:space="preserve">
    <value>Layer</value>
  </data>
  <data name="Scene" xml:space="preserve">
    <value>Scene</value>
  </data>
  <data name="Width" xml:space="preserve">
    <value>Width</value>
  </data>
  <data name="Height" xml:space="preserve">
    <value>Height</value>
  </data>
  <data name="Framerate" xml:space="preserve">
    <value>Framerate</value>
  </data>
  <data name="Samplingrate" xml:space="preserve">
    <value>Samplingrate</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
</root>