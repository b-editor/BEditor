<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
		Microsoft ResX Schema

		Version 1.3

		The primary goals of this format is to allow a simple XML format 
		that is mostly human readable. The generation and parsing of the 
		various data types are done through the TypeConverter classes 
		associated with the data types.

		Example:

		... ado.net/XML headers & schema ...
		<resheader name="resmimetype">text/microsoft-resx</resheader>
		<resheader name="version">1.3</resheader>
		<resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
		<resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
		<data name="Name1">this is my long string</data>
		<data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
		<data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
			[base64 mime encoded serialized .NET Framework object]
		</data>
		<data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
			[base64 mime encoded string representing a byte array form of the .NET Framework object]
		</data>

		There are any number of "resheader" rows that contain simple 
		name/value pairs.

		Each data row contains a name, and value. The row also contains a 
		type or mimetype. Type corresponds to a .NET class that support 
		text/value conversion through the TypeConverter architecture. 
		Classes that don't support this are serialized and stored with the 
		mimetype set.

		The mimetype is used for serialized objects, and tells the 
		ResXResourceReader how to depersist the object. This is currently not 
		extensible. For a given mimetype the value must be set accordingly:

		Note - application/x-microsoft.net.object.binary.base64 is the format 
		that the ResXResourceWriter will generate, however the reader can 
		read any of the formats listed below.

		mimetype: application/x-microsoft.net.object.binary.base64
		value   : The object must be serialized with 
			: System.Serialization.Formatters.Binary.BinaryFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.soap.base64
		value   : The object must be serialized with 
			: System.Runtime.Serialization.Formatters.Soap.SoapFormatter
			: and then encoded with base64 encoding.

		mimetype: application/x-microsoft.net.object.bytearray.base64
		value   : The object must be serialized into a byte array 
			: using a System.ComponentModel.TypeConverter
			: and then encoded with base64 encoding.
	-->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>1.3</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.3500.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="BufferDataInvalidEnum" xml:space="preserve">
    <value>指定されたフォーマットは存在しません。</value>
  </data>
  <data name="BufferDataInvalidValue" xml:space="preserve">
    <value>size パラメータが指定されたフォーマットに対して有効でない、バッファが使用中である、またはデータが NULL ポインタです。</value>
  </data>
  <data name="BufferDataOutOfMemory" xml:space="preserve">
    <value>このバッファを作成するのに十分なメモリがありません。</value>
  </data>
  <data name="DeleteBufferInvalidName" xml:space="preserve">
    <value>バッファ名が無効です。</value>
  </data>
  <data name="DeleteBufferInvalidOperation" xml:space="preserve">
    <value>このバッファはまだ使用されており、削除することはできません。</value>
  </data>
  <data name="DeleteBufferInvalidValue" xml:space="preserve">
    <value>要求された数のバッファは削除できません。</value>
  </data>
  <data name="DeleteSourceInvalidName" xml:space="preserve">
    <value>少なくとも1つの指定されたソースが有効でないか、または存在するよりも多くのソースを削除しようとしています。</value>
  </data>
  <data name="DeleteSourceInvalidOperation" xml:space="preserve">
    <value>現在のコンテキストはありません。</value>
  </data>
  <data name="GenBufferInvalidValue" xml:space="preserve">
    <value>バッファ配列が、要求された数のバッファを格納するのに十分な大きさではありません。</value>
  </data>
  <data name="GenBufferOutOfMemory" xml:space="preserve">
    <value>要求されたすべてのバッファを生成するのに十分なメモリがありません。</value>
  </data>
  <data name="GenSourceInvalidOperation" xml:space="preserve">
    <value>ソースを作成するためのコンテキストがありません。</value>
  </data>
  <data name="GenSourceInvalidValue" xml:space="preserve">
    <value>要求されたすべてのソースを作成するための非メモリリソースが不足しているか、または配列ポインタが有効ではありません。</value>
  </data>
  <data name="GenSourceOutOfMemory" xml:space="preserve">
    <value>要求されたすべてのソースを生成するのに十分なメモリがありません。</value>
  </data>
  <data name="GetBufferInvalidEnum" xml:space="preserve">
    <value>指定されたパラメータは無効です。</value>
  </data>
  <data name="GetBufferInvalidName" xml:space="preserve">
    <value>指定されたバッファにパラメータがない（NULLバッファ）、または存在していません。</value>
  </data>
  <data name="GetBufferInvalidValue" xml:space="preserve">
    <value>指定された値のポインタが有効ではありません。</value>
  </data>
  <data name="SourcePauseInvalidName" xml:space="preserve">
    <value>指定されたソース名は有効ではありません。</value>
  </data>
  <data name="SourcePauseInvalidOperation" xml:space="preserve">
    <value>現在のコンテキストはありません。</value>
  </data>
  <data name="SourcePlayInvalidOperation" xml:space="preserve">
    <value>現在のコンテキストはありません。</value>
  </data>
  <data name="SourceStopInvalidOperation" xml:space="preserve">
    <value>現在のコンテキストはありません。</value>
  </data>
  <data name="SourceStopInvalidName" xml:space="preserve">
    <value>指定されたソース名は有効ではありません。</value>
  </data>
  <data name="SourcePlayInvalidName" xml:space="preserve">
    <value>指定されたソース名は有効ではありません。</value>
  </data>
  <data name="ThrowErrorInvalidEnum" xml:space="preserve">
    <value>指定されたパラメータは無効です。</value>
  </data>
  <data name="ThrowErrorInvalidName" xml:space="preserve">
    <value>指定されたソース名は有効ではありません。</value>
  </data>
  <data name="ThrowErrorInvalidOperation" xml:space="preserve">
    <value>現在のコンテキストはありません。</value>
  </data>
  <data name="ThrowErrorInvalidValue" xml:space="preserve">
    <value>指定された値は範囲外です。</value>
  </data>
</root>